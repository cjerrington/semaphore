{"version":3,"file":"7807.6673f19c4a65d58ccc84.7807.js","mappings":"kOA6Ba,CACPA,KAAI,IACJC,MAAK,IACLC,QAASC,GACP,MAAM,MAAEC,GAAUC,KAAKC,OC9BxB,SAAyBF,EAAOG,GACrCC,EAAA,iBAAqBJ,EAAO,CAAEK,YAAaF,GAC7C,CD6BQG,CAAeN,EAAOD,EAAKQ,KAC3BN,KAAKJ,OACX,G,6CAXeO,EAAA,E,kGACA,CACXI,mBAAoB,O,wUApBO,E,QAAOC,O,0EAAiBX,QAAQY,E,gBAN9DC,G,QACAC,M,QACAC,M,kBACiB,E,sRAGoBJ,O,iCANrCE,I,oBACAC,O,oBACAC,O,ifAgBH,UAoBoB,oBAAEC,EAAmB,MAAEd,I,OAAYc,EAAoBd,IAAU,CAAC,C,kIAI/D,YAAEe,EAAW,0BAAEC,IAC9B,OAAOD,EAAYV,aAAeW,EAA0BC,OAAOC,OAC3E,C,kGALoB,eAAEf,IACd,OAAO,WAA0BgB,GAAKA,EAAEZ,MAAQJ,GACxD,C,wGAIc,YAAEE,EAAW,mBAAEG,IACrB,OAAOA,EAAmBY,KAAIC,IAAU,CACtCd,IAAKc,EAAOd,IACZK,MAAOS,EAAOT,MACdU,KAAMD,EAAOC,KACbC,SAAUlB,EAAYE,MAAQc,EAAOd,OAE/C,C,4CElDe,SAASiB,EAAuBxB,GAC7C,OAAO,OAAW,EAAmB,CACnCY,MAAO,eACPC,MAAO,eACPb,SAEJ,C","sources":["webpack://semaphore/./src/routes/_components/dialog/components/PostPrivacyDialog.html","webpack://semaphore/./src/routes/_actions/postPrivacy.js","webpack://semaphore/./src/routes/_components/dialog/creators/showPostPrivacyDialog.js"],"sourcesContent":["<ModalDialog\n  {id}\n  {label}\n  {title}\n  shrinkWidthToFit={true}\n  background=\"var(--main-bg)\"\n>\n  <GenericDialogList selectable={true} {items} on:click=\"onClick(event)\" />\n</ModalDialog>\n<script>\n  import ModalDialog from './ModalDialog.html'\n  import { store } from '../../../_store/store.js'\n  import { POST_PRIVACY_OPTIONS } from '../../../_static/statuses.js'\n  import { setPostPrivacy } from '../../../_actions/postPrivacy.js'\n  import GenericDialogList from './GenericDialogList.html'\n  import { show } from '../helpers/showDialog.js'\n  import { close } from '../helpers/closeDialog.js'\n  import { oncreate } from '../helpers/onCreateDialog.js'\n\n  export default {\n    oncreate,\n    components: {\n      ModalDialog,\n      GenericDialogList\n    },\n    store: () => store,\n    data: () => ({\n      postPrivacyOptions: POST_PRIVACY_OPTIONS\n    }),\n    methods: {\n      show,\n      close,\n      onClick (item) {\n        const { realm } = this.get()\n        setPostPrivacy(realm, item.key)\n        this.close()\n      }\n    },\n    computed: {\n      composeData: ({ $currentComposeData, realm }) => $currentComposeData[realm] || {},\n      postPrivacy: ({ postPrivacyKey }) => {\n        return POST_PRIVACY_OPTIONS.find(_ => _.key === postPrivacyKey)\n      },\n      postPrivacyKey: ({ composeData, $currentVerifyCredentials }) => {\n        return composeData.postPrivacy || $currentVerifyCredentials.source.privacy\n      },\n      items: ({ postPrivacy, postPrivacyOptions }) => {\n        return postPrivacyOptions.map(option => ({\n          key: option.key,\n          label: option.label,\n          icon: option.icon,\n          selected: postPrivacy.key === option.key\n        }))\n      }\n    }\n  }\n</script>\n","\nimport { store } from '../_store/store.js'\n\nexport function setPostPrivacy (realm, postPrivacyKey) {\n  store.setComposeData(realm, { postPrivacy: postPrivacyKey })\n}\n","import PostPrivacyDialog from '../components/PostPrivacyDialog.html'\nimport { showDialog } from './showDialog.js'\n\nexport default function showPostPrivacyDialog (realm) {\n  return showDialog(PostPrivacyDialog, {\n    label: \"Post privacy\",\n    title: \"Post privacy\",\n    realm\n  })\n}\n"],"names":["show","close","onClick","item","realm","this","get","postPrivacyKey","store","postPrivacy","setPostPrivacy","key","postPrivacyOptions","items","event","id","label","title","$currentComposeData","composeData","$currentVerifyCredentials","source","privacy","_","map","option","icon","selected","showPostPrivacyDialog"],"sourceRoot":""}