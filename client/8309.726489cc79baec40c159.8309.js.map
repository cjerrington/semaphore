{"version":3,"file":"8309.726489cc79baec40c159.8309.js","mappings":"uMA8Da,CACPA,cAAeC,GACb,MAAM,OAAEC,EAAM,UAAEC,GAAcF,EAC9BC,EAAOE,QAAQD,EACrB,EACIE,wBACE,MAAM,gBAAEC,GAAoBC,KAAKC,MAC3BC,QAAiBH,IACvBC,KAAKG,IAAI,CAAED,YACjB,G,mBA5BI,UACQF,KAAKI,iBAKjB,CAJM,MAAOC,GACQ,SAAU,OAAW,CAAC,UAAU,CAAC,UAAW,CAAEC,MAAQD,EAAEE,SAAW,KACxF,CAAM,QACAP,KAAKG,IAAI,CAAEK,SAAS,GAC1B,EACI,IAAAC,IAAG,sBAAuBT,MAAM,IAAMA,KAAKI,mBACjD,C,iGA9CaF,S,aAAL,Y,mXAAKA,S,gBAAL,a,kHAAA,M,uOAEGQ,Q,UACQC,gB,iFACClB,cAAcC,E,gHAFvBgB,S,+BACQC,gB,kFAiDF,I,qBALA,CACXH,SAAS,EACTN,SAAU,GACVS,oBAAgBC,G,meAtDfJ,QAAO,E,EAEHN,UAAY,EAAAA,SAASW,OAAM,O","sources":["webpack://semaphore/./src/routes/_components/AccountsListPage.html"],"sourcesContent":["<div class=\"accounts-page\">\n  {#if loading}\n    <LoadingPage />\n  {:elseif accounts && accounts.length}\n    <ul class=\"accounts-results\">\n      {#each accounts as account}\n        <AccountSearchResult\n          {account}\n          actions={accountActions}\n          on:click=\"onClickAction(event)\"\n        />\n      {/each}\n    </ul>\n  {/if}\n</div>\n<style>\n  .accounts-page {\n    padding: 20px 20px;\n    position: relative;\n  }\n  .accounts-results {\n    list-style: none;\n    box-sizing: border-box;\n    border: 1px solid var(--main-border);\n    border-radius: 2px;\n  }\n  @media (max-width: 767px) {\n    .accounts-page {\n      padding: 20px 10px;\n    }\n  }\n</style>\n<script>\n  import { store } from '../_store/store.js'\n  import LoadingPage from './LoadingPage.html'\n  import AccountSearchResult from './search/AccountSearchResult.html'\n  import { toast } from './toast/toast.js'\n  import { on } from '../_utils/eventBus.js'\n  import { formatIntl } from '../_utils/formatIntl.js'\n\n  // TODO: paginate\n  export default {\n    async oncreate () {\n      try {\n        await this.refreshAccounts()\n      } catch (e) {\n        /* no await */ toast.say(formatIntl([\"Error: \",[\"error\"]], { error: (e.message || '') }))\n      } finally {\n        this.set({ loading: false })\n      }\n      on('refreshAccountsList', this, () => this.refreshAccounts())\n    },\n    data: () => ({\n      loading: true,\n      accounts: [],\n      accountActions: undefined\n    }),\n    store: () => store,\n    components: {\n      LoadingPage,\n      AccountSearchResult\n    },\n    methods: {\n      onClickAction (event) {\n        const { action, accountId } = event\n        action.onclick(accountId)\n      },\n      async refreshAccounts () {\n        const { accountsFetcher } = this.get()\n        const accounts = await accountsFetcher()\n        this.set({ accounts })\n      }\n    }\n  }\n</script>\n"],"names":["onClickAction","event","action","accountId","onclick","async","accountsFetcher","this","get","accounts","set","refreshAccounts","e","error","message","loading","on","account","accountActions","undefined","length"],"sourceRoot":""}