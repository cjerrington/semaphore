{"version":3,"file":"2644.18340238ba9ef6637f4a.2644.js","mappings":"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","sources":["webpack://semaphore/./src/routes/_components/LengthGauge.html","webpack://semaphore/./src/routes/_components/LengthIndicator.html","webpack://semaphore/./src/routes/_components/compose/ComposeToolbar.html","webpack://semaphore/./src/routes/_components/dialog/asyncDialogs/importShowEmojiDialog.js","webpack://semaphore/./src/routes/_components/dialog/asyncDialogs/importShowPostPrivacyDialog.js","webpack://semaphore/./src/routes/_actions/contentWarnings.js","webpack://semaphore/./src/routes/_actions/composePoll.js","webpack://semaphore/./src/routes/_components/compose/ComposeLengthGauge.html","webpack://semaphore/./src/routes/_components/compose/ComposeLengthIndicator.html","webpack://semaphore/./src/routes/_components/compose/ComposeAuthor.html","webpack://semaphore/./src/routes/_actions/autosuggest.js","webpack://semaphore/./src/routes/_utils/userAgent/isWebKit.js","webpack://semaphore/./src/routes/_components/compose/ComposeInput.html","webpack://semaphore/./src/routes/_components/compose/ComposeButton.html","webpack://semaphore/./src/routes/_components/compose/ComposeStickyButton.html","webpack://semaphore/./src/routes/_components/dialog/asyncDialogs/importShowMediaEditDialog.js","webpack://semaphore/./src/routes/_components/compose/ComposeMediaItem.html","webpack://semaphore/./src/routes/_components/compose/ComposeMedia.html","webpack://semaphore/./src/routes/_components/compose/ComposeContentWarning.html","webpack://semaphore/./src/routes/_components/compose/ComposeFileDrop.html","webpack://semaphore/./src/routes/_components/compose/ComposeAutosuggestionList.html","webpack://semaphore/./src/routes/_utils/createAutosuggestAccessibleLabel.js","webpack://semaphore/./src/routes/_components/compose/ComposeAutosuggestContainer.html","webpack://semaphore/./src/routes/_utils/once.js","webpack://semaphore/./src/routes/_components/compose/ComposeAutosuggest.html","webpack://semaphore/./src/routes/_static/polls.js","webpack://semaphore/./src/routes/_components/compose/ComposePoll.html","webpack://semaphore/./src/routes/_components/compose/ComposeMediaSensitive.html","webpack://semaphore/./src/routes/_transitions/slide.js","webpack://semaphore/./src/routes/_actions/compose.js","webpack://semaphore/./src/routes/_components/compose/ComposeBox.html","webpack://semaphore/./src/routes/_api/statuses.js","webpack://semaphore/./src/routes/_thirdparty/autosize/autosize.js","webpack://semaphore/./src/routes/_utils/urlRegex.js","webpack://semaphore/./src/routes/_utils/handleRegex.js","webpack://semaphore/./src/routes/_utils/measureText.js","webpack://semaphore/./src/routes/_utils/requestPostAnimationFrame.js","webpack://semaphore/./src/routes/_utils/throttleTimer.js"],"sourcesContent":["<div class={computedClass}\n     style={computedStyle}\n     aria-hidden=\"true\"\n></div>\n<style>\n  .length-gauge {\n    height: 2px;\n    background: var(--main-theme-color);\n    transform-origin: left;\n  }\n  .length-gauge.should-animate {\n    transition: transform 0.2s linear;\n  }\n  .length-gauge.over-char-limit {\n    background: var(--warning-color);\n  }\n</style>\n<script>\n  import { mark, stop } from '../_utils/marks.js'\n  import { store } from '../_store/store.js'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../_utils/throttleTimer.js'\n  import { classname } from '../_utils/classname.js'\n\n  const updateDisplayedLength = process.browser && throttleTimer(requestAnimationFrame)\n\n  export default {\n    oncreate () {\n      const { lengthAsFraction } = this.get()\n      this.set({ lengthAsFractionDeferred: lengthAsFraction })\n      // perf improvement for keyboard input latency\n      this.observe('lengthAsFraction', () => {\n        updateDisplayedLength(() => {\n          mark('set lengthAsFractionDeferred')\n          const { lengthAsFraction } = this.get()\n          this.set({ lengthAsFractionDeferred: lengthAsFraction })\n          stop('set lengthAsFractionDeferred')\n          requestAnimationFrame(() => this.set({ shouldAnimate: true }))\n        })\n      }, { init: false })\n    },\n    data: () => ({\n      shouldAnimate: false,\n      lengthAsFractionDeferred: 0,\n      style: ''\n    }),\n    store: () => store,\n    computed: {\n      lengthAsFraction: ({ length, max }) => {\n        // We don't need to update the gauge for every decimal point, so round it to the nearest 0.02\n        const int = Math.round(Math.min(max, length) / max * 100)\n        return (int - (int % 2)) / 100\n      },\n      computedClass: ({ shouldAnimate, overLimit, $reduceMotion }) => classname(\n        'length-gauge',\n        !$reduceMotion && shouldAnimate && 'should-animate',\n        overLimit && 'over-char-limit'\n      ),\n      computedStyle: ({ style, lengthAsFractionDeferred }) => `transform: scaleX(${lengthAsFractionDeferred}); ${style}`\n    },\n    methods: {\n      observe\n    }\n  }\n</script>\n","<span class=\"length-indicator {overLimit ? 'over-char-limit' : ''}\"\n      aria-live={lengthVerbosity}\n      aria-atomic='true'\n      {style}\n>{lengthToDisplayDeferred}</span>\n<style>\n  .length-indicator {\n    color: var(--length-indicator-color);\n    font-size: 1.3em;\n  }\n\n  .length-indicator.over-char-limit {\n    color: var(--warning-color);\n  }\n</style>\n<script>\n  import { mark, stop } from '../_utils/marks.js'\n  import { store } from '../_store/store.js'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../_utils/throttleTimer.js'\n  const updateDisplayedLength = process.browser && throttleTimer(requestAnimationFrame)\n\n  // How many chars within the limit to start warning at\n  const WARN_THRESHOLD = 10\n\n  export default {\n    oncreate () {\n      const { lengthToDisplay } = this.get()\n      this.set({ lengthToDisplayDeferred: lengthToDisplay })\n      // perf improvement for keyboard input latency\n      this.observe('lengthToDisplay', () => {\n        updateDisplayedLength(() => {\n          mark('set lengthToDisplayDeferred')\n          const { lengthToDisplay } = this.get()\n          this.set({ lengthToDisplayDeferred: lengthToDisplay })\n          stop('set lengthToDisplayDeferred')\n        })\n      }, { init: false })\n    },\n    data: () => ({\n      lengthToDisplayDeferred: 0,\n      style: ''\n    }),\n    store: () => store,\n    computed: {\n      lengthToDisplay: ({ length, max }) => max - length,\n      lengthVerbosity: ({ lengthToDisplayDeferred }) => {\n        // When approaching the limit, notify screen reader users\n        if (lengthToDisplayDeferred > WARN_THRESHOLD) {\n          return 'off'\n        } else {\n          return 'polite'\n        }\n      }\n    },\n    methods: {\n      observe\n    }\n  }\n</script>\n","<div class=\"compose-box-toolbar\">\n  <div class=\"compose-box-toolbar-items\">\n    <IconButton\n      className=\"compose-toolbar-button\"\n      label=\"Insert emoji\"\n      href=\"#fa-smile\"\n      on:click=\"onEmojiClick()\"\n    />\n    <IconButton\n      className=\"compose-toolbar-button\"\n      svgClassName={$uploadingMedia ? 'spin' : ''}\n      label=\"Add media (images, video, audio)\"\n      href={$uploadingMedia ? '#fa-spinner' : '#fa-camera'}\n      on:click=\"onMediaClick()\"\n      disabled={$uploadingMedia || (media.length === 4)}\n    />\n    <IconButton\n      className=\"compose-toolbar-button\"\n      label=\"Add poll\"\n      pressedLabel=\"Remove poll\"\n      href=\"#fa-bar-chart\"\n      on:click=\"onPollClick()\"\n      pressable={true}\n      pressed={poll && poll.options && poll.options.length}\n    />\n    <IconButton\n      className=\"compose-toolbar-button\"\n      label={postPrivacyLabel}\n      href={postPrivacy.icon}\n      on:click=\"onPostPrivacyClick()\"\n    />\n    <IconButton\n      className=\"compose-toolbar-button\"\n      label=\"Add content warning\"\n      pressedLabel=\"Remove content warning\"\n      href=\"#fa-exclamation-triangle\"\n      on:click=\"onContentWarningClick()\"\n      pressable={true}\n      pressed={contentWarningShown}\n    />\n  </div>\n  <input ref:input\n         on:change=\"onFileChange(event)\"\n         style=\"display: none;\"\n         type=\"file\"\n         multiple\n         accept={mediaAccept} >\n</div>\n<style>\n  .compose-box-toolbar {\n    grid-area: toolbar;\n    align-self: center;\n  }\n  .compose-box-toolbar-items {\n    display: flex;\n    align-items: center;\n  }\n\n  @media (max-width: 320px) {\n    :global(button.icon-button.compose-toolbar-button) {\n      padding-left: 5px;\n      padding-right: 5px;\n    }\n  }\n  @media (max-width: 240px) {\n    :global(button.icon-button.compose-toolbar-button .icon-button-svg) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n</style>\n<script>\n  import IconButton from '../IconButton.html'\n  import { store } from '../../_store/store.js'\n  import { importShowEmojiDialog } from '../dialog/asyncDialogs/importShowEmojiDialog.js'\n  import { importShowPostPrivacyDialog } from '../dialog/asyncDialogs/importShowPostPrivacyDialog.js'\n  import { doMediaUpload } from '../../_actions/media.js'\n  import { toggleContentWarningShown } from '../../_actions/contentWarnings.js'\n  import { mediaAccept } from '../../_static/media.js'\n  import { enablePoll, disablePoll } from '../../_actions/composePoll.js'\n  import { updateCustomEmojiForInstance } from '../../_actions/emoji.js'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  export default {\n    components: {\n      IconButton\n    },\n    data: () => ({\n      mediaAccept\n    }),\n    computed: {\n      postPrivacyLabel: ({ postPrivacy }) => (\n        formatIntl([\"Adjust privacy (currently \",[\"label\"],\")\"], { label: postPrivacy.label })\n      )\n    },\n    store: () => store,\n    methods: {\n      async onEmojiClick () {\n        const { realm } = this.get()\n        const { currentInstance } = this.store.get()\n        const [showEmojiDialog] = await Promise.all([\n          importShowEmojiDialog(),\n          updateCustomEmojiForInstance(currentInstance)\n        ])\n        showEmojiDialog(realm)\n      },\n      onMediaClick () {\n        this.refs.input.click()\n      },\n      async onFileChange (e) {\n        const { files } = e.target\n        const { realm } = this.get()\n        for (const file of files) {\n          await doMediaUpload(realm, file)\n        }\n      },\n      async onPostPrivacyClick () {\n        const { realm } = this.get()\n        const showPostPrivacyDialog = await importShowPostPrivacyDialog()\n        showPostPrivacyDialog(realm)\n      },\n      onContentWarningClick () {\n        const { realm } = this.get()\n        toggleContentWarningShown(realm)\n      },\n      onPollClick () {\n        const { poll, realm } = this.get()\n        if (poll && poll.options && poll.options.length) {\n          disablePoll(realm)\n        } else {\n          enablePoll(realm)\n        }\n      }\n    }\n  }\n</script>\n","export const importShowEmojiDialog = () => import(\n  '../creators/showEmojiDialog.js'\n).then(mod => mod.default)\n","export const importShowPostPrivacyDialog = () => import(\n  '../creators/showPostPrivacyDialog.js'\n).then(mod => mod.default)\n","import { store } from '../_store/store.js'\n\nexport function toggleContentWarningShown (realm) {\n  const shown = store.getComposeData(realm, 'contentWarningShown')\n  const contentWarning = store.getComposeData(realm, 'contentWarning')\n  const newShown = !shown\n  store.setComposeData(realm, {\n    contentWarning: newShown ? contentWarning : '',\n    contentWarningShown: newShown,\n    sensitive: contentWarning && newShown // toggling content warning automatically toggles sensitive media\n  })\n}\n","import { store } from '../_store/store.js'\n\nexport function enablePoll (realm) {\n  store.setComposeData(realm, {\n    poll: {\n      options: [\n        '',\n        ''\n      ]\n    }\n  })\n}\n\nexport function disablePoll (realm) {\n  store.setComposeData(realm, {\n    poll: null\n  })\n}\n","<LengthGauge style=\"grid-area: gauge; margin: 0 0 5px 5px;\"\n       {length}\n       {overLimit}\n       max={$maxStatusChars}\n/>\n<script>\n  import LengthGauge from '../LengthGauge.html'\n  import { store } from '../../_store/store.js'\n\n  export default {\n    components: {\n      LengthGauge\n    },\n    store: () => store\n  }\n</script>\n","<LengthIndicator\n  {length}\n  {overLimit}\n  max={$maxStatusChars}\n  style=\"grid-area: length; justify-self: right; align-self: center;\"\n/>\n<script>\n  import { store } from '../../_store/store.js'\n  import LengthIndicator from '../LengthIndicator.html'\n\n  export default {\n    store: () => store,\n    components: {\n      LengthIndicator\n    }\n  }\n</script>\n","<a {href}\n   rel=\"prefetch\"\n   class=\"compose-box-avatar {loaded ? 'loaded' : 'not-loaded'}\"\n   aria-hidden=\"true\"\n   tabindex=\"-1\"\n   on:click=\"onClick(event)\"\n>\n  <!-- the avatar is duplicated information, so hide from tab order and screenreaders -->\n  <Avatar account={verifyCredentials} size={avatarSize} />\n</a>\n<a class=\"compose-box-display-name {loaded ? 'loaded' : 'not-loaded'}\"\n   {href}\n   aria-busy={!loaded}\n   aria-live=\"off\"\n   rel=\"prefetch\"\n   on:click=\"onClick(event)\"\n>\n  <AccountDisplayName account={verifyCredentials} />\n</a>\n\n<span class=\"compose-box-handle {loaded ? 'loaded' : 'not-loaded'}\"\n      aria-busy={!loaded}\n      aria-live=\"off\"\n>\n  {'@' + verifyCredentials.acct}\n</span>\n<style>\n  .compose-box-avatar {\n    grid-area: avatar;\n    margin-right: 15px;\n  }\n  .compose-box-display-name {\n    color: var(--deemphasized-text-color);\n    grid-area: name;\n    min-width: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 1.1em;\n    margin-left: 5px;\n    font-weight: 600;\n  }\n  .compose-box-display-name,\n  .compose-box-display-name:hover,\n  .compose-box-display-name:visited {\n    color: var(--body-text-color);\n  }\n  :global(.compose-box-handle) {\n    grid-area: handle;\n    color: var(--deemphasized-text-color);\n    min-width: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 1.1em;\n    margin-left: 5px;\n  }\n  .not-loaded {\n    visibility: hidden;\n  }\n  .loaded {\n    visibility: visible;\n  }\n\n  @media (max-width: 767px) {\n    .compose-box-avatar {\n      margin-right: 5px;\n    }\n  }\n  @media (max-width: 240px) {\n    .compose-box-avatar {\n      margin-right: 0;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  import { store } from '../../_store/store.js'\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n  import { ONE_TRANSPARENT_PIXEL } from '../../_static/media.js'\n  import { emit } from '../../_utils/eventBus.js'\n  import { goto } from '../../../../__sapper__/client.js'\n\n  export default {\n    components: {\n      Avatar,\n      AccountDisplayName\n    },\n    store: () => store,\n    computed: {\n      loaded: ({ $currentVerifyCredentials }) => !!$currentVerifyCredentials,\n      verifyCredentials: ({ $currentVerifyCredentials }) => {\n        // return a placeholder while we're waiting on IndexedDB to load\n        // (https://github.com/nolanlawson/pinafore/issues/1076)\n        return $currentVerifyCredentials || {\n          display_name: '',\n          acct: '',\n          avatar: ONE_TRANSPARENT_PIXEL,\n          avatar_static: ONE_TRANSPARENT_PIXEL\n        }\n      },\n      id: ({ verifyCredentials }) => (verifyCredentials && verifyCredentials.id),\n      href: ({ id }) => (id ? `/accounts/${id}` : '#'),\n      avatarSize: ({ $isVeryTinyMobileSize }) => $isVeryTinyMobileSize ? 'extra-small' : 'small'\n    },\n    methods: {\n      onClick (e) {\n        const { realm, dialogId, href } = this.get()\n        if (realm === 'dialog') {\n          e.preventDefault()\n          e.stopPropagation()\n          // in dialog mode, we have to close the dialog and then navigate to the profile\n          emit('closeDialog', dialogId)\n          setTimeout(() => { // setTimeout to work around dialog navigation issues\n            goto(href)\n          })\n        }\n      }\n    }\n  }\n</script>\n","import { store } from '../_store/store.js'\n\nconst emojiMapper = emoji => emoji.unicode ? emoji.unicode : `:${emoji.shortcodes[0]}:`\nconst hashtagMapper = hashtag => `#${hashtag.name}`\nconst accountMapper = account => `@${account.acct}`\n\nasync function insertTextAtPosition (realm, text, startIndex, endIndex) {\n  const { currentInstance } = store.get()\n  const oldText = store.getComposeData(realm, 'text')\n  const pre = oldText.substring(0, startIndex)\n  const post = oldText.substring(endIndex)\n  const newText = `${pre}${text} ${post}`\n  store.setComposeData(realm, { text: newText })\n  store.setForAutosuggest(currentInstance, realm, { autosuggestSearchResults: [] })\n}\n\nexport async function insertUsername (realm, account, startIndex, endIndex) {\n  await insertTextAtPosition(realm, accountMapper(account), startIndex, endIndex)\n}\n\nexport async function insertHashtag (realm, hashtag, startIndex, endIndex) {\n  await insertTextAtPosition(realm, hashtagMapper(hashtag), startIndex, endIndex)\n}\n\nexport async function insertEmojiAtPosition (realm, emoji, startIndex, endIndex) {\n  await insertTextAtPosition(realm, emojiMapper(emoji), startIndex, endIndex)\n}\n\nasync function clickSelectedItem (realm, resultMapper) {\n  const {\n    composeSelectionStart,\n    autosuggestSearchText,\n    autosuggestSelected,\n    autosuggestSearchResults\n  } = store.get()\n  const result = autosuggestSearchResults[autosuggestSelected]\n  const startIndex = composeSelectionStart - autosuggestSearchText.length\n  const endIndex = composeSelectionStart\n  await insertTextAtPosition(realm, resultMapper(result), startIndex, endIndex)\n}\n\nexport async function clickSelectedAutosuggestionUsername (realm) {\n  return clickSelectedItem(realm, accountMapper)\n}\n\nexport async function clickSelectedAutosuggestionHashtag (realm) {\n  return clickSelectedItem(realm, hashtagMapper)\n}\n\nexport async function clickSelectedAutosuggestionEmoji (realm) {\n  return clickSelectedItem(realm, emojiMapper)\n}\n\nexport function selectAutosuggestItem (item) {\n  const {\n    currentComposeRealm,\n    composeSelectionStart,\n    autosuggestSearchText\n  } = store.get()\n  const startIndex = composeSelectionStart - autosuggestSearchText.length\n  const endIndex = composeSelectionStart\n  if (item.acct) {\n    /* no await */ insertUsername(currentComposeRealm, item, startIndex, endIndex)\n  } else if (item.shortcodes) {\n    /* no await */ insertEmojiAtPosition(currentComposeRealm, item, startIndex, endIndex)\n  } else { // hashtag\n    /* no await */ insertHashtag(currentComposeRealm, item, startIndex, endIndex)\n  }\n}\n","import { thunk } from '../thunk.js'\n\nexport const isWebKit = thunk(() => process.browser && typeof webkitIndexedDB !== 'undefined')\n","<textarea\n  id=\"the-compose-box-input-{realm}\"\n  class=\"compose-box-input compose-box-input-realm-{realm}\"\n  placeholder=\"What's on your mind?\"\n  aria-describedby=\"compose-box-input-description-{realm}\"\n  aria-owns=\"compose-autosuggest-list-{realm}\"\n  aria-expanded={autosuggestShownForThisInput}\n  aria-autocomplete=\"both\"\n  aria-activedescendant={activeDescendant}\n  ref:textarea\n  bind:value=rawText\n  on:focus=\"onFocus()\"\n  on:blur=\"onBlur()\"\n  on:selectionChange=\"onSelectionChange(event)\"\n  on:keydown=\"onKeydown(event)\"\n></textarea>\n<label for=\"the-compose-box-input-{realm}\" class=\"sr-only\">\n  What's on your mind?\n</label>\n<span id=\"compose-box-input-description-{realm}\" class=\"sr-only\">\n  When autocomplete results are available, press up or down arrows and enter to select.\n</span>\n<style>\n  .compose-box-input {\n    grid-area: input;\n    margin: 10px 0 0 5px;\n    padding: 10px;\n    border: 1px solid var(--input-border);\n    min-height: 75px;\n    resize: none;\n    overflow: hidden;\n    word-wrap: break-word;\n    /* Text must be at least 16px or else iOS Safari zooms in */\n    font-size: 1.2em;\n    /* Hack to make Edge stretch the element all the way to the right.\n     * Also desktop Safari makes the gauge stretch too far to the right without it.\n     */\n    width: calc(100% - 5px);\n  }\n\n  .compose-box-input-realm-dialog {\n    max-height: 40vh;\n    overflow-y: auto;\n  }\n\n  @media (max-width: 767px) {\n    .compose-box-input-realm-dialog {\n      max-height: 30vh;\n    }\n  }\n\n  @media (max-width: 479px) {\n    .compose-box-input-realm-dialog {\n      max-height: 20vh;\n    }\n  }\n</style>\n<script>\n  import { store } from '../../_store/store.js'\n  import { autosize } from '../../_thirdparty/autosize/autosize.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n  import { mark, stop } from '../../_utils/marks.js'\n  import { selectionChange } from '../../_utils/events.js'\n  import {\n    clickSelectedAutosuggestionUsername,\n    clickSelectedAutosuggestionEmoji, clickSelectedAutosuggestionHashtag\n  } from '../../_actions/autosuggest.js'\n  import { observe } from 'svelte-extras'\n  import { get } from '../../_utils/lodash-lite.js'\n  import { on } from '../../_utils/eventBus.js'\n  import { requestPostAnimationFrame } from '../../_utils/requestPostAnimationFrame.js'\n  import { throttleTimer } from '../../_utils/throttleTimer.js'\n  import { isWebKit } from '../../_utils/userAgent/isWebKit.js'\n\n  const updateComposeTextInStore = throttleTimer(scheduleIdleTask)\n\n  export default {\n    oncreate () {\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n      this.setupAutosize()\n      this.setupResize()\n      this.setCursorIfNecessary()\n    },\n    ondestroy () {\n      this.teardownAutosize()\n    },\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        const textarea = this.refs.textarea\n        let firstTime = true\n        this.observe('text', text => {\n          const { rawText } = this.get()\n          if (rawText !== text) {\n            let newSelectionStart\n            if (!firstTime) {\n              const { selectionStart, selectionEnd } = textarea\n              if (selectionStart > 0 && selectionStart === selectionEnd) {\n                // Preserve cursor position when doing an autosuggest.\n                // Note that we don't need to do anything special to measure length here, because\n                // the selectionStart value is not emoji-aware.\n                newSelectionStart = (text.length - rawText.length) + selectionStart\n              }\n            }\n            this.set({ rawText: text })\n            if (typeof newSelectionStart === 'number' && newSelectionStart > 0) {\n              textarea.selectionStart = textarea.selectionEnd = newSelectionStart\n            }\n            // this next autosize is required to resize after\n            // the user clicks the \"toot\" button\n            mark('autosize.update()')\n            autosize.update(textarea)\n            stop('autosize.update()')\n          }\n          if (firstTime) {\n            firstTime = false\n            const { autoFocus } = this.get()\n            if (autoFocus) {\n              const { realm } = this.get()\n              if (realm === 'dialog') {\n                // If we're in a dialog, the dialog will be hidden at this\n                // point. Also, the dialog has its own initial focus behavior.\n                // Tell the dialog to focus the textarea.\n                textarea.setAttribute('autofocus', true)\n              } else {\n                requestAnimationFrame(() => textarea.focus({ preventScroll: true }))\n              }\n            }\n          }\n        })\n      },\n      setupSyncToStore () {\n        const { realm } = this.get()\n        this.observe('rawText', rawText => {\n          updateComposeTextInStore(() => {\n            mark('updateComposeTextInStore')\n            this.store.setComposeData(realm, { text: rawText })\n            this.store.save()\n            stop('updateComposeTextInStore')\n          })\n        }, { init: false })\n      },\n      setupAutosize () {\n        const textarea = this.refs.textarea\n        requestPostAnimationFrame(() => {\n          mark('autosize()')\n          autosize(textarea)\n          stop('autosize()')\n        })\n      },\n      teardownAutosize () {\n        mark('autosize.destroy()')\n        autosize.destroy(this.refs.textarea)\n        stop('autosize.destroy()')\n      },\n      onBlur () {\n        requestAnimationFrame(() => {\n          this.store.setForCurrentAutosuggest({ composeFocused: false })\n        })\n      },\n      onFocus () {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          this.store.set({ currentComposeRealm: realm })\n          this.store.setForCurrentAutosuggest({ composeFocused: true })\n        })\n      },\n      onSelectionChange (selectionStart) {\n        scheduleIdleTask(() => {\n          this.store.setForCurrentAutosuggest({ composeSelectionStart: selectionStart })\n        })\n      },\n      onKeydown (e) {\n        const { keyCode } = e\n        // ctrl or cmd (on macs) was pressed; ctrl-enter means post a toot\n        const ctrlPressed = e.getModifierState('Control') || e.getModifierState('Meta')\n        switch (keyCode) {\n          case 9: { // tab\n            this.clickSelectedAutosuggestion(e)\n            break\n          }\n          case 13: { // enter\n            const autosuggestionClicked = this.clickSelectedAutosuggestion(e)\n            if (!autosuggestionClicked && ctrlPressed) {\n              this.fire('postAction')\n            }\n            break\n          }\n          case 38: { // up\n            this.incrementAutosuggestSelected(-1, e)\n            break\n          }\n          case 40: { // down\n            this.incrementAutosuggestSelected(1, e)\n            break\n          }\n          case 27: { // escape\n            this.clearAutosuggestions(e)\n            break\n          }\n          default:\n        }\n      },\n      clickSelectedAutosuggestion (event) {\n        const {\n          autosuggestShown,\n          autosuggestType\n        } = this.store.get()\n        if (!autosuggestShown) {\n          return false\n        }\n        event.preventDefault()\n        event.stopPropagation()\n\n        const clickAutosuggestedItem = async () => {\n          const { realm } = this.get()\n          /* autosuggestSelecting prevents a flash of searched content */\n          this.store.setForCurrentAutosuggest({ autosuggestSelecting: true })\n          if (autosuggestType === 'account') {\n            await clickSelectedAutosuggestionUsername(realm)\n          } else if (autosuggestType === 'hashtag') {\n            await clickSelectedAutosuggestionHashtag(realm)\n          } else { // emoji\n            await clickSelectedAutosuggestionEmoji(realm)\n          }\n          this.store.setForCurrentAutosuggest({ autosuggestSelecting: false })\n        }\n\n        /* no await */ clickAutosuggestedItem()\n        return true\n      },\n      incrementAutosuggestSelected (increment, event) {\n        let {\n          autosuggestShown,\n          autosuggestSelected,\n          autosuggestSearchResults\n        } = this.store.get()\n        if (!autosuggestShown) {\n          return\n        }\n        autosuggestSelected += increment\n        if (autosuggestSelected >= 0) {\n          autosuggestSelected = autosuggestSelected % autosuggestSearchResults.length\n        } else {\n          autosuggestSelected = autosuggestSearchResults.length + autosuggestSelected\n        }\n        this.store.setForCurrentAutosuggest({ autosuggestSelected })\n        event.preventDefault()\n        event.stopPropagation()\n      },\n      clearAutosuggestions (event) {\n        const { autosuggestShown } = this.store.get()\n        if (!autosuggestShown) {\n          return\n        }\n        this.store.setForCurrentAutosuggest({\n          autosuggestSearchResults: [],\n          autosuggestSelected: 0\n        })\n        event.preventDefault()\n        event.stopPropagation()\n      },\n      setupResize () {\n        on('resizeComposeInput', this, realm => {\n          if (realm === this.get().realm) {\n            autosize.update(this.refs.textarea)\n          }\n        })\n      },\n      setCursorIfNecessary () {\n        const { realm } = this.get()\n        if (isWebKit() && realm !== 'dialog' && realm !== 'home') {\n          // Place the cursor at the end of the textarea in replies if this is WebKit.\n          // Works around a Safari/WebKit bug: https://github.com/nolanlawson/pinafore/issues/1921\n          // We only do this for replies (not dialog/home) because for dialog/home we don't want to\n          // also focus the textarea, which is a side effect of setting selectionStart.\n          // Potentially we could run this logic for all browsers, but I don't want to deal with the potential\n          // perf hit or bugs of running more code for browsers that don't need it.\n          requestAnimationFrame(() => {\n            this.refs.textarea.selectionStart = this.refs.textarea.value.length\n          })\n        }\n      }\n    },\n    store: () => store,\n    data: () => ({\n      rawText: ''\n    }),\n    computed: {\n      /* eslint-disable camelcase */\n      composeFocused: ({ $autosuggestData_composeFocused, $currentInstance, realm }) => (\n        get($autosuggestData_composeFocused, [$currentInstance, realm], false)\n      ),\n\n      autosuggestShownForThisInput: ({ $autosuggestShown, composeFocused }) => (\n        !!($autosuggestShown && composeFocused)\n      ),\n      autosuggestSelected: ({ $autosuggestData_autosuggestSelected, $currentInstance, realm }) => (\n        get($autosuggestData_autosuggestSelected, [$currentInstance, realm], 0)\n      ),\n      activeDescendant: ({ autosuggestSelected, autosuggestShownForThisInput, realm }) => (\n        autosuggestShownForThisInput ? `compose-autosuggest-active-item-${realm}-${autosuggestSelected}` : undefined\n      )\n      /* eslint-enable camelcase */\n    },\n    events: {\n      selectionChange\n    }\n  }\n</script>\n","<div class=\"compose-box-button-halo {sticky ? 'compose-box-button-halo-sticky' : ''}\">\n  <button class=\"primary compose-box-button\"\n          {disabled}\n          aria-label={sticky ? 'Compose toot' : 'Toot!'}\n          on:click>\n    <span class={$postingStatus || sticky ? 'hidden' : ''}>\n      Toot!\n    </span>\n    <div class=\"compose-box-button-spinner\"\n         aria-hidden=\"true\">\n      <SvgIcon className=\"compose-box-button-svg {$postingStatus ? 'spin' : 'hidden'}\"\n               href=\"#fa-spinner\" />\n    </div>\n\n    <div class=\"compose-box-button-compose {sticky ? '' : 'hidden'}\"\n         aria-hidden=\"true\">\n      <SvgIcon className=\"compose-box-button-svg\"\n               href=\"#fa-pencil\" />\n    </div>\n  </button>\n</div>\n<style>\n  .compose-box-button-halo {\n    border-radius: 2px;\n    margin: 5px 15px 15px 5px;\n    pointer-events: auto;\n  }\n  .compose-box-button-halo-sticky {\n    background-color: var(--compose-button-halo);\n  }\n  .compose-box-button {\n    grid-area: button;\n    justify-self: right;\n    text-transform: uppercase;\n    position: relative;\n    margin: 5px;\n    pointer-events: auto;\n  }\n  .compose-box-button-spinner, .compose-box-button-compose {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 10;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  :global(.compose-box-button-svg) {\n    width: 24px;\n    height: 24px;\n    fill: var(--button-primary-text);\n  }\n\n  @media (max-width: 767px) {\n    .compose-box-button-halo {\n      margin: 5px;\n    }\n    .compose-box-button {\n      margin: 5px;\n    }\n  }\n</style>\n<script>\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store.js'\n\n  export default {\n    store: () => store,\n    computed: {\n      disabled: ({ $postingStatus, overLimit }) => $postingStatus || overLimit\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","<div class=\"compose-box-button-sentinel\" ref:sentinel></div>\n<div class=\"{computedClass}\"\n     ref:wrapper >\n  <ComposeButton {overLimit} {sticky} on:click=\"onClickButton()\" />\n</div>\n<style>\n  .compose-box-button-wrapper {\n    /*\n     * We want pointer-events only for the sticky button, so use fit-content so that\n     * the element doesn't take up the full width, and then set its left margin to\n     * auto so that it sticks to the right. fit-content doesn't work in Edge, but\n     * that just means that content that is level with the button is not clickable.\n     */\n    width: -moz-fit-content;\n    width: fit-content;\n    margin-left: auto;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .compose-box-button-sticky {\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  :global(.compose-box-button-sticky, .compose-box-button-fixed) {\n    z-index: 5000;\n    top: calc(var(--fab-gap-top));\n  }\n</style>\n<script>\n  import ComposeButton from './ComposeButton.html'\n  import { store } from '../../_store/store.js'\n  import { importShowComposeDialog } from '../dialog/asyncDialogs/importShowComposeDialog.js'\n  import { observe } from 'svelte-extras'\n  import { classname } from '../../_utils/classname.js'\n\n  export default {\n    oncreate () {\n      this.setupIntersectionObservers()\n    },\n    ondestroy () {\n      this.teardownIntersectionObservers()\n    },\n    store: () => store,\n    data: () => ({\n      sticky: false\n    }),\n    computed: {\n      timelineInitialized: ({ $timelineInitialized }) => $timelineInitialized,\n      computedClass: ({ showSticky, hideAndFadeIn }) => (classname(\n        'compose-box-button-wrapper',\n        showSticky && 'compose-box-button-sticky',\n        hideAndFadeIn\n      ))\n    },\n    methods: {\n      observe,\n      onClickButton () {\n        const { sticky } = this.get()\n        if (sticky) {\n          // when the button is sticky, we're scrolled down the home timeline,\n          // so we should launch a new compose dialog\n          this.showDialog()\n        } else {\n          // else we're actually posting a new toot, let our parent know\n          this.fire('postAction')\n        }\n      },\n      async showDialog () {\n        (await importShowComposeDialog())()\n      },\n      setupIntersectionObservers () {\n        const { showSticky } = this.get()\n        if (!showSticky) {\n          return // no need to set up observers if this button can never be sticky (e.g. dialogs)\n        }\n        const sentinel = this.refs.sentinel\n\n        this.__stickyObserver = new IntersectionObserver(entries => this.onObserve(entries))\n        this.__stickyObserver.observe(sentinel)\n\n        // also create a one-shot observer for the $timelineInitialized event,\n        // due to a bug in Firefox where when the scrollTop is set\n        // manually, the other observer doesn't necessarily fire\n        this.observe('timelineInitialized', timelineInitialized => {\n          if (timelineInitialized && !this.__oneShotObserver) {\n            this.__oneShotObserver = new IntersectionObserver(entries => {\n              this.onObserve(entries)\n              this.__oneShotObserver.disconnect()\n              this.__oneShotObserver = null\n            })\n            this.__oneShotObserver.observe(sentinel)\n          }\n        }, { init: false })\n      },\n      onObserve (entries) {\n        this.set({ sticky: !entries[0].isIntersecting })\n      },\n      teardownIntersectionObservers () {\n        if (this.__stickyObserver) {\n          this.__stickyObserver.disconnect()\n          this.__stickyObserver = null\n        }\n        if (this.__oneShotObserver) {\n          this.__oneShotObserver.disconnect()\n          this.__oneShotObserver = null\n        }\n      }\n    },\n    components: {\n      ComposeButton\n    }\n  }\n</script>\n","export const importShowMediaEditDialog = () => import(\n  '../creators/showMediaEditDialog.js'\n).then(mod => mod.default)\n","<li class=\"compose-media compose-media-realm-{realm}\" aria-label={shortName}>\n  <img\n    alt=\"\"\n    class=\"{type === 'audio' ? 'audio-preview' : ''}\"\n    style=\"object-position: {objectPosition};\"\n    src={previewSrc}\n    aria-hidden=\"true\"\n  />\n  <div class=\"compose-media-buttons\">\n    <button class=\"compose-media-button compose-media-focal-button\"\n            aria-label=\"Edit\"\n            title=\"Edit\"\n            on:click=\"onEdit()\" >\n      <SvgIcon className=\"compose-media-button-svg\" href=\"#fa-pencil\" />\n    </button>\n    <button class=\"compose-media-button compose-media-delete-button\"\n            aria-label=\"Delete\"\n            title=\"Delete\"\n            on:click=\"onDeleteMedia()\" >\n      <SvgIcon className=\"compose-media-button-svg\" href=\"#fa-times\" />\n    </button>\n  </div>\n  <div class=\"compose-media-alt\">\n    <textarea id=\"compose-media-input-{uuid}\"\n           class=\"compose-media-alt-input\"\n           placeholder=\"Description\"\n           ref:textarea\n           bind:value=rawText\n    ></textarea>\n    <label for=\"compose-media-input-{uuid}\" class=\"sr-only\">\n      Describe for visually impaired (image, video) or auditorily impaired (audio, video) people\n    </label>\n  </div>\n</li>\n<style>\n  .compose-media {\n    margin: 0;\n    padding: 0;\n    height: 200px;\n    overflow: hidden;\n    flex-direction: column;\n    position: relative;\n    display: flex;\n    background: var(--main-bg);\n  }\n  .compose-media img {\n    object-fit: contain;\n    flex: 1;\n    height: 100%;\n    width: 100%;\n  }\n  .compose-media-alt {\n    z-index: 10;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n  }\n  .compose-media-alt-input {\n    width: 100%;\n    font-size: 1.2em;\n    background: var(--alt-input-bg);\n    color: var(--body-text-color);\n    max-height: 100px;\n    border: 1px solid var(--input-border);\n    resize: none;\n  }\n  .compose-media-alt-input:focus {\n    background: var(--main-bg);\n  }\n  .compose-media-buttons {\n    position: absolute;\n    z-index: 10;\n    top: 0;\n    right: 0;\n    left: 0;\n    display: flex;\n    justify-content: space-between;\n    margin: 2px;\n  }\n  .compose-media-button {\n    padding: 7px 10px 5px;\n    background: var(--floating-button-bg);\n    border: 1px solid var(--button-border);\n  }\n  .compose-media-button:hover {\n    background: var(--floating-button-bg-hover);\n  }\n  .compose-media-button:active {\n    background: var(--floating-button-bg-active);\n  }\n  :global(.compose-media-button-svg) {\n    fill: var(--button-text);\n    width: 18px;\n    height: 18px;\n  }\n\n  .audio-preview {\n    background: var(--audio-bg);\n  }\n\n  .compose-media-realm-dialog {\n    max-height: 20vh;\n  }\n\n  @media (max-width: 767px) {\n    .compose-media-realm-dialog {\n      max-height: 15vh;\n    }\n    .compose-media-alt-input {\n      max-height: 7vh;\n    }\n  }\n\n  @media (max-width: 320px) {\n    .compose-media-realm-dialog .compose-media-alt-input {\n      display: none; /* too small to show this - use the edit button instead */\n    }\n  }\n</style>\n<script>\n  import { store } from '../../_store/store.js'\n  import { deleteMedia } from '../../_actions/media.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n  import { observe } from 'svelte-extras'\n  import SvgIcon from '../SvgIcon.html'\n  import { autosize } from '../../_thirdparty/autosize/autosize.js'\n  import { ONE_TRANSPARENT_PIXEL } from '../../_static/media.js'\n  import { get } from '../../_utils/lodash-lite.js'\n  import { coordsToPercent } from '../../_utils/coordsToPercent.js'\n  import { importShowMediaEditDialog } from '../dialog/asyncDialogs/importShowMediaEditDialog.js'\n  import { throttleTimer } from '../../_utils/throttleTimer.js'\n\n  const updateMediaInStore = throttleTimer(scheduleIdleTask)\n  const resizeTextarea = process.browser && throttleTimer(requestAnimationFrame)\n\n  export default {\n    oncreate () {\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n      this.setupAutosize()\n    },\n    ondestroy () {\n      this.teardownAutosize()\n    },\n    data: () => ({\n      rawText: '',\n      focusX: 0,\n      focusY: 0\n    }),\n    computed: {\n      type: ({ mediaItem }) => mediaItem.data.type,\n      shortName: ({ mediaItem }) => (\n        // sometimes we no longer have the file, e.g. in a delete and redraft situation,\n        // so fall back to the description if it was provided\n        get(mediaItem, ['file', 'name']) || get(mediaItem, ['description']) || 'media'\n      ),\n      previewSrc: ({ mediaItem, type }) => (\n        type === 'audio' ? ONE_TRANSPARENT_PIXEL : mediaItem.data.preview_url\n      ),\n      uuid: ({ realm, mediaItem }) => `${realm}-${mediaItem.data.id}`,\n      objectPosition: ({ focusX, focusY }) => {\n        if (!focusX && !focusY) {\n          return 'center center'\n        }\n        return `${coordsToPercent(focusX)}% ${100 - coordsToPercent(focusY)}%`\n      }\n    },\n    store: () => store,\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('media', media => {\n          media = media || []\n          const { index, rawText } = this.get()\n          const text = get(media, [index, 'description'], '')\n          if (rawText !== text) {\n            this.set({ rawText: text })\n            resizeTextarea(() => autosize.update(this.refs.textarea))\n          }\n          const focusX = get(media, [index, 'focusX'], 0)\n          const focusY = get(media, [index, 'focusY'], 0)\n          this.set({ focusX, focusY })\n        })\n      },\n      setupSyncToStore () {\n        this.observe('rawText', rawText => {\n          updateMediaInStore(() => {\n            const { realm, index, media } = this.get()\n            if (media[index].description !== rawText) {\n              media[index].description = rawText\n              this.store.setComposeData(realm, { media })\n              this.store.save()\n            }\n          })\n        }, { init: false })\n      },\n      setupAutosize () {\n        autosize(this.refs.textarea)\n      },\n      teardownAutosize () {\n        autosize.destroy(this.refs.textarea)\n      },\n      onDeleteMedia () {\n        const { realm, index } = this.get()\n        deleteMedia(realm, index)\n      },\n      async onEdit () {\n        const { realm, index, type } = this.get()\n        const showMediaEditDialog = await importShowMediaEditDialog()\n        showMediaEditDialog(realm, index, type)\n      }\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","{#if media.length}\n  <ul class=\"compose-media-container\"\n      aria-label=\"Media uploads\"\n      style=\"grid-template-columns: repeat({media.length}, 1fr);\"\n  >\n    {#each media as mediaItem, index}\n      <ComposeMediaItem {realm} {mediaItem} {index} {media} />\n    {/each}\n  </ul>\n{/if}\n<style>\n  .compose-media-container {\n    grid-area: media;\n    list-style: none;\n    display: grid;\n    grid-column-gap: 5px;\n    align-items: center;\n    justify-content: center;\n    margin: 10px 0 0 0;\n    background: var(--form-bg);\n    padding: 5px;\n    border-radius: 4px;\n  }\n</style>\n<script>\n  import { store } from '../../_store/store.js'\n  import ComposeMediaItem from './ComposeMediaItem.html'\n\n  export default {\n    store: () => store,\n    components: {\n      ComposeMediaItem\n    }\n  }\n</script>\n","<input class=\"content-warning-input\"\n       type=\"text\"\n       placeholder=\"Content warning\"\n       aria-label=\"Content warning\"\n       bind:value=rawText\n/>\n<style>\n  .content-warning-input {\n    font-size: 1.2em;\n    margin: 10px 0 0 5px;\n    padding: 10px;\n    border: 1px solid var(--input-border);\n    width: calc(100% - 5px);\n  }\n</style>\n<script>\n  import { store } from '../../_store/store.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../../_utils/throttleTimer.js'\n\n  const updateContentWarningInStore = throttleTimer(scheduleIdleTask)\n\n  export default {\n    oncreate () {\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n    },\n    store: () => store,\n    data: () => ({\n      rawText: ''\n    }),\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('contentWarning', contentWarning => {\n          this.set({ rawText: contentWarning })\n        })\n      },\n      setupSyncToStore () {\n        const { realm } = this.get()\n        this.observe('rawText', rawText => {\n          updateContentWarningInStore(() => {\n            this.store.setComposeData(realm, {\n              sensitive: !!rawText, // toggling the content warning automatically toggles sensitive media\n              contentWarning: rawText\n            })\n            this.store.save()\n          })\n        }, { init: false })\n      }\n    }\n  }\n</script>\n","<file-drop multiple class=\"file-drop file-drop-realm-{realm}\" accept={mediaAccept} ref:fileDrop >\n  <div class=\"file-drop-info\">\n    <div class=\"file-drop-info-text\">\n      <span class=\"file-drop-info-text-valid\">Drop to upload</span>\n      <span class=\"file-drop-info-text-invalid\">Invalid file type</span>\n    </div>\n  </div>\n  <slot></slot>\n</file-drop>\n<style>\n  .file-drop {\n    display: block;\n    position: relative;\n    max-width: 100%;\n    width: 100%;\n  }\n\n  .file-drop-info {\n    display: none;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 6000;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .file-drop-info-text {\n    font-size: 1.2em;\n    color: var(--button-text);\n    padding: 10px 20px;\n    border: 2px dashed var(--button-text);\n    border-radius: 6px;\n  }\n\n  .file-drop-realm-dialog {\n    max-height: 100%;\n    overflow-y: auto;\n    overflow-x: hidden;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n  }\n\n  .file-drop-realm-dialog::-webkit-scrollbar {\n    display: none;\n  }\n\n  :global(.file-drop.drop-valid .file-drop-info, .file-drop.drop-invalid .file-drop-info) {\n    display: flex;\n    background: var(--file-drop-mask);\n  }\n\n  :global(.file-drop.drop-valid .file-drop-info-text-invalid, .file-drop.drop-invalid .file-drop-info-text-valid) {\n    display: none;\n  }\n</style>\n<script>\n  import { mediaAccept } from '../../_static/media.js'\n  import { doMediaUpload } from '../../_actions/media.js'\n  if (process.browser) {\n    require('file-drop-element')\n  }\n  export default {\n    oncreate () {\n      this.onFileDrop = this.onFileDrop.bind(this)\n      this.refs.fileDrop.addEventListener('filedrop', this.onFileDrop)\n    },\n    ondestroy () {\n      this.refs.fileDrop.removeEventListener('filedrop', this.onFileDRop)\n    },\n    data: () => ({\n      mediaAccept\n    }),\n    methods: {\n      async onFileDrop (e) {\n        const { files } = e\n        const { realm } = this.get()\n        for (const file of files) { // upload one at a time to avoid hitting limits\n          await doMediaUpload(realm, file)\n        }\n      }\n    }\n  }\n</script>\n","<!-- accessible autocomplete, based on https://haltersweb.github.io/Accessibility/autocomplete.html -->\n<ul id=\"compose-autosuggest-list-{realm}\"\n    class=\"compose-autosuggest-list\"\n    role=\"listbox\"\n>\n  {#each items as item, i (item.shortcodes ? `emoji-${item.unicode || item.name}` : item.id ? `account-${item.id}` : `hashtag-${item.name}`)}\n  <li id=\"compose-autosuggest-active-item-{realm}-{i}\"\n      class=\"compose-autosuggest-list-item {i === selected ? 'selected' : ''}\"\n      role=\"option\"\n      aria-selected=\"{i === selected}\"\n      on:click=\"onClick(event, item)\"\n  >\n    <!-- aria-label would be simpler than an sr-only element, but that breaks VoiceOver+Safari\n         https://github.com/nolanlawson/pinafore/issues/1629 -->\n      <span class=\"sr-only\">{ariaLabels[i]}</span>\n      <div class=\"compose-autosuggest-list-grid\" aria-hidden=\"true\">\n        {#if type === 'account'}\n          <div class=\"compose-autosuggest-list-item-avatar\">\n            <Avatar\n              size=\"{$isVeryTinyMobileSize ? 'extra-small' : 'small'}\"\n              account={item}\n            />\n          </div>\n          <span class=\"compose-autosuggest-list-display-name\">\n              <AccountDisplayName account={item} />\n          </span>\n          <span class=\"compose-autosuggest-list-username\">\n              {'@' + item.acct}\n          </span>\n        {:elseif type === 'hashtag'}\n          <SvgIcon\n              href=\"#fa-hashtag\"\n              ariaHidden={true}\n              className=\"compose-autosuggest-list-item-icon\"\n          />\n          <span class=\"compose-autosuggest-list-display-name compose-autosuggest-list-display-name-single\">\n            {item.name}\n          </span>\n        {:else} <!-- emoji -->\n          {#if item.url}\n            <!-- custom emoji -->\n            <img src={item.url}\n                 class=\"compose-autosuggest-list-item-icon\"\n                 alt=\"\"\n                 aria-hidden=\"true\"\n            />\n          {:else}\n            <!-- native emoji -->\n            <span class=\"compose-autosuggest-list-item-icon compose-autosuggest-list-item-native-emoji\">\n              {item.unicode}\n            </span>\n          {/if}\n          <span class=\"compose-autosuggest-list-display-name compose-autosuggest-list-display-name-single\">\n              {item.shortcodes.map(_ => `:${_}:`).join(' ')}\n          </span>\n        {/if}\n      </div>\n  </li>\n  {/each}\n</ul>\n<style>\n  .compose-autosuggest-list {\n    list-style: none;\n    width: 100%;\n    border-radius: 2px;\n    box-sizing: border-box;\n    border: 1px solid var(--compose-autosuggest-outline);\n  }\n  .compose-autosuggest-list-item {\n    border-bottom: 1px solid var(--compose-autosuggest-outline);\n    display: flex;\n    padding: 10px;\n    background: var(--settings-list-item-bg);\n    margin: 0;\n    flex: 1;\n    cursor: pointer;\n  }\n  .compose-autosuggest-list-item:last-child {\n    border-bottom: none;\n  }\n  .compose-autosuggest-list-grid {\n    display: grid;\n    width: 100%;\n    grid-template-areas: \"icon     display-name\"\n                         \"icon     username\";\n    grid-template-columns: min-content 1fr;\n    grid-column-gap: 10px;\n    grid-row-gap: 5px;\n  }\n  :global(.compose-autosuggest-list-item-avatar) {\n    grid-area: icon;\n  }\n  :global(.compose-autosuggest-list-item-icon) {\n    grid-area: icon;\n    width: 48px;\n    height: 48px;\n    object-fit: contain;\n    fill: var(--deemphasized-text-color);\n  }\n  .compose-autosuggest-list-item-native-emoji {\n    font-family: CountryFlagEmojiPolyfill, SemaphoreEmoji;\n    font-size: 32px;\n    line-height: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .compose-autosuggest-list-display-name {\n    grid-area: display-name;\n    font-size: 1.1em;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: 0;\n    text-align: left;\n  }\n  .compose-autosuggest-list-display-name-single {\n    grid-row: 1 / 3;\n    align-self: center;\n  }\n  .compose-autosuggest-list-username {\n    grid-area: username;\n    font-size: 1em;\n    color: var(--deemphasized-text-color);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-align: left;\n  }\n  .compose-autosuggest-list-item:hover, .compose-autosuggest-list-item.selected {\n    background: var(--compose-autosuggest-item-hover);\n  }\n  .compose-autosuggest-list-item:active {\n    background: var(--compose-autosuggest-item-active);\n  }\n\n  @media (max-width: 320px) {\n    .compose-autosuggest-list-item {\n      padding: 5px;\n    }\n    .compose-autosuggest-list-grid {\n      grid-column-gap: 5px;\n    }\n    :global(.compose-autosuggest-list-item-icon) {\n      width: 24px;\n      height: 24px;\n    }\n    .compose-autosuggest-list-item-native-emoji {\n      font-size: 18px;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  import { store } from '../../_store/store.js'\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n  import { createAutosuggestAccessibleLabel } from '../../_utils/createAutosuggestAccessibleLabel.js'\n  import SvgIcon from '../SvgIcon.html'\n\n  export default {\n    store: () => store,\n    computed: {\n      ariaLabels: ({ items, type, $omitEmojiInDisplayNames }) => {\n        return items.map((item, i) => {\n          return createAutosuggestAccessibleLabel(type, $omitEmojiInDisplayNames, i, items)\n        })\n      }\n    },\n    methods: {\n      onClick (event, item) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.fire('click', item)\n      }\n    },\n    components: {\n      Avatar,\n      AccountDisplayName,\n      SvgIcon\n    }\n  }\n</script>\n","import { removeEmoji } from './removeEmoji.js'\n\nexport function createAutosuggestAccessibleLabel (\n  autosuggestType, $omitEmojiInDisplayNames,\n  selectedIndex, searchResults) {\n  const selected = searchResults[selectedIndex]\n  let label\n  if (autosuggestType === 'emoji') {\n    label = selected.name || [selected.unicode].concat(selected.shortcodes).join(', ')\n  } else if (autosuggestType === 'hashtag') {\n    label = `#${selected.name}`\n  } else { // account\n    let displayName = selected.display_name || selected.username\n    const emojis = selected.emojis || []\n    displayName = $omitEmojiInDisplayNames\n      ? removeEmoji(displayName, emojis) || displayName\n      : displayName\n    label = `${displayName} @${selected.acct}`\n  }\n  return label\n}\n","<div class=\"compose-autosuggest {shown ? '' : 'not-shown'} {realm === 'dialog' ? 'is-dialog' : ''}\"\n     style=\"top: {top}px; --autosuggest-input-left: {left}px;\"\n>\n  <ComposeAutosuggestionList\n    items={autosuggestSearchResults}\n    on:click=\"onClick(event)\"\n    type={autosuggestType}\n    selected={autosuggestSelected}\n    {realm}\n  />\n</div>\n<style>\n  .compose-autosuggest {\n    position: absolute;\n    z-index: 90;\n    --autosuggest-input-left: 0; /* overridden by \"left\" prop passed in */\n    --autosuggest-left-offset: 5px;\n    /* In desktop mode, the autosuggest tracks the position of the input (the \"left\" prop passed in). */\n    left: calc(var(--autosuggest-input-left) + var(--autosuggest-left-offset));\n  }\n  .compose-autosuggest.not-shown {\n    display: none;\n  }\n\n  /* desktop styles */\n  @media (min-width: 480px) {\n    .compose-autosuggest {\n      min-width: 400px;\n      max-width: calc(100% - 20px);\n    }\n  }\n\n  /* mobile size */\n  @media (max-width: 479px) {\n    .compose-autosuggest {\n      /* on mobile, make it fill the viewport width */\n      --autosuggest-left-offset: 10px;\n      left: var(--autosuggest-left-offset);\n      width: calc(100vw - (2 * var(--autosuggest-left-offset)));\n    }\n  }\n\n  /* tiny mobile size */\n  @media (max-width: 240px) {\n    .compose-autosuggest {\n      --autosuggest-left-offset: 5px; /* make it bigger on tiny devices */\n    }\n    .compose-autosuggest.is-dialog {\n      --autosuggest-left-offset: 10px; /* more padding in dialogs */\n    }\n  }\n\n</style>\n<script>\n  import { store } from '../../_store/store.js'\n  import ComposeAutosuggestionList from './ComposeAutosuggestionList.html'\n  import { get } from '../../_utils/lodash-lite.js'\n  import { selectAutosuggestItem } from '../../_actions/autosuggest.js'\n  import { observe } from 'svelte-extras'\n  import { once } from '../../_utils/once.js'\n\n  export default {\n    oncreate () {\n      this._promiseChain = Promise.resolve()\n      this.observe('shouldBeShown', (shouldBeShown) => {\n        // TODO: hack so that when the user clicks the button, and the textarea blurs,\n        // we don't immediately hide the dropdown which would cause the click to get lost\n        this._promiseChain = this._promiseChain.then(() => {\n          if (!shouldBeShown) {\n            return Promise.race([\n              new Promise(resolve => setTimeout(resolve, 200)),\n              new Promise(resolve => this.once('autosuggestItemSelected', resolve))\n            ])\n          }\n        }).then(() => {\n          this.set({ shown: shouldBeShown })\n          this.store.setForCurrentAutosuggest({ autosuggestSelecting: false })\n        })\n      })\n    },\n    methods: {\n      observe,\n      once,\n      onClick (item) {\n        /* autosuggestSelecting prevents a flash of searched content */\n        this.store.setForCurrentAutosuggest({ autosuggestSelecting: true })\n        this.fire('autosuggestItemSelected')\n        selectAutosuggestItem(item)\n      }\n    },\n    computed: {\n      /* eslint-disable camelcase */\n      composeSelectionStart: ({ $autosuggestData_composeSelectionStart, $currentInstance, realm }) => (\n        get($autosuggestData_composeSelectionStart, [$currentInstance, realm], 0)\n      ),\n      composeFocused: ({ $autosuggestData_composeFocused, $currentInstance, realm }) => (\n        get($autosuggestData_composeFocused, [$currentInstance, realm], false)\n      ),\n      autosuggestSearchResults: ({ $autosuggestData_autosuggestSearchResults, $currentInstance, realm }) => (\n        get($autosuggestData_autosuggestSearchResults, [$currentInstance, realm], [])\n      ),\n      autosuggestType: ({ $autosuggestData_autosuggestType, $currentInstance, realm }) => (\n        get($autosuggestData_autosuggestType, [$currentInstance, realm])\n      ),\n      autosuggestSelected: ({ $autosuggestData_autosuggestSelected, $currentInstance, realm }) => (\n        get($autosuggestData_autosuggestSelected, [$currentInstance, realm], 0)\n      ),\n      autosuggestSearchText: ({ $autosuggestData_autosuggestSelected, $currentInstance, realm }) => (\n        get($autosuggestData_autosuggestSelected, [$currentInstance, realm])\n      ),\n      /* eslint-enable camelcase */\n      shouldBeShown: ({ $autosuggestShown, composeFocused }) => (\n        !!($autosuggestShown && composeFocused)\n      )\n    },\n    data: () => ({\n      shown: false,\n      top: 0\n    }),\n    store: () => store,\n    components: {\n      ComposeAutosuggestionList\n    }\n  }\n</script>\n","// svelte helper to add a .once() method similar to .on, but only fires once\n\nexport function once (eventName, callback) {\n  const listener = this.on(eventName, eventValue => {\n    listener.cancel()\n    callback(eventValue)\n  })\n}\n","<div class=\"compose-autosuggest-anchor-point\" ref:anchor></div>\n<style>\n  .compose-autosuggest-anchor-point {\n    grid-area: autosuggest;\n    width: 100%;\n    height: 0;\n  }\n</style>\n<script>\n  import ComposeAutosuggestContainer from './ComposeAutosuggestContainer.html'\n  import { requestPostAnimationFrame } from '../../_utils/requestPostAnimationFrame.js'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../../_utils/throttleTimer.js'\n  import { on } from '../../_utils/eventBus.js'\n  import { store } from '../../_store/store.js'\n  import { addScrollListener, getScrollContainer, removeScrollListener } from '../../_utils/scrollContainer.js'\n  import { get } from '../../_utils/lodash-lite.js'\n  import { registerResizeListener, unregisterResizeListener } from '../../_utils/resize.js'\n\n  const updatePosition = process.browser && throttleTimer(requestAnimationFrame)\n\n  export default {\n    oncreate () {\n      const { dialogId } = this.get()\n      this.onResize = () => updatePosition(() => this.doResize())\n      let setupDone = false\n      if (this.get().realm === 'dialog') {\n        // wait for dialog to render first\n        on('dialogDidRender', this, id => {\n          if (id === dialogId && !setupDone) {\n            setupDone = true\n            this.setup()\n          }\n        })\n      } else {\n        setupDone = true\n        this.setup()\n      }\n    },\n    ondestroy () {\n      if (this._autosuggest) {\n        this._autosuggest.destroy()\n        this._autosuggest = null\n      }\n      if (this._element) {\n        this._element.remove()\n      }\n      unregisterResizeListener(this.onResize)\n      removeScrollListener(this.onResize)\n    },\n    methods: {\n      observe,\n      setup () {\n        const { realm, text, dialogId } = this.get()\n        requestAnimationFrame(() => {\n          const id = `the-autosuggest-container-${realm}`\n          this._element = document.getElementById(id)\n          if (!this._element) {\n            this._element = document.createElement('div')\n            this._element.id = id\n            const parent = realm === 'dialog' ? document.querySelector('.modal-dialog-contents') : document.body\n            parent.appendChild(this._element) // write\n          }\n          requestPostAnimationFrame(() => {\n            const { left, top } = this.calculateLeftAndTop()\n            this._autosuggest = new ComposeAutosuggestContainer({\n              target: this._element,\n              data: {\n                realm,\n                text,\n                dialogId,\n                left,\n                top\n              }\n            })\n            this.observe('text', text => {\n              this._autosuggest.set({ text })\n            }, { init: false })\n            this.observe('shouldBeShown', shouldBeShown => {\n              if (shouldBeShown) {\n                this.onResize() // just in case the window size changed while we weren't focused\n              }\n            })\n            registerResizeListener(this.onResize)\n            addScrollListener(this.onResize)\n          })\n        })\n      },\n      doResize () {\n        const { shouldBeShown } = this.get()\n        if (this._autosuggest && shouldBeShown) {\n          const { left, top } = this.calculateLeftAndTop()\n          console.log('updating autosuggest position', { left, top })\n          this._autosuggest.set({ left, top })\n        }\n      },\n      calculateLeftAndTop () {\n        const { anchor } = this.refs\n        const { realm } = this.get()\n        const { left, bottom } = anchor.getBoundingClientRect()\n        const yOffset = realm === 'dialog' ? 0 : getScrollContainer().scrollTop\n        return {\n          left,\n          top: bottom + yOffset\n        }\n      }\n    },\n    store: () => store,\n    computed: {\n      /* eslint-disable camelcase */\n      composeFocused: ({ $autosuggestData_composeFocused, $currentInstance, realm }) => (\n        get($autosuggestData_composeFocused, [$currentInstance, realm], false)\n      ),\n      /* eslint-enable camelcase */\n      shouldBeShown: ({ $autosuggestShown, composeFocused }) => (\n        !!($autosuggestShown && composeFocused)\n      )\n    }\n  }\n</script>\n","// Someday we can maybe replace this with Intl.DurationFormat\n// https://github.com/tc39/proposal-intl-duration-format\n\nexport const POLL_EXPIRY_OPTIONS = [\n  {\n    value: 300,\n    label: \"5 minutes\"\n  },\n  {\n    value: 1800,\n    label: \"30 minutes\"\n  },\n  {\n    value: 3600,\n    label: \"1 hour\"\n  },\n  {\n    value: 21600,\n    label: \"6 hours\"\n  },\n  {\n    value: 86400,\n    label: \"1 day\"\n  },\n  {\n    value: 259200,\n    label: \"3 days\"\n  },\n  {\n    value: 604800,\n    label: \"7 days\"\n  }\n]\n\nexport const POLL_EXPIRY_DEFAULT = 86400\n","<section class=\"compose-poll\" aria-label=\"Create poll\">\n    {#each poll.options as option, i}\n      <input id=\"poll-option-{realm}-{i}\"\n             type=\"text\"\n             maxlength=\"50\"\n             on:change=\"onChange(i)\"\n             placeholder=\"{createLabel(i)}\"\n\n      >\n      <IconButton\n        label=\"{createRemoveLabel(i)}\"\n        href=\"#fa-times\"\n        muted={true}\n        on:click=\"onDeleteClick(i)\"\n      />\n    {/each}\n  <div>\n    <input type=\"checkbox\"\n           id=\"poll-option-multiple-{realm}\"\n           on:change=\"onMultipleChange()\"\n    >\n    <label class=\"multiple-choice-label\"\n           for=\"poll-option-multiple-{realm}\">\n      Multiple choice\n    </label>\n    <Select className=\"poll-expiry-select\"\n            options={pollExpiryOptions}\n            defaultValue={pollExpiryDefaultValue}\n            on:change=\"onExpiryChange(event)\"\n            label=\"Poll duration\"\n    />\n  </div>\n  <IconButton\n    className=\"add-poll-choice-button\"\n    label=\"Add choice\"\n    href=\"#fa-plus\"\n    muted={true}\n    disabled={poll.options.length === 4}\n    on:click=\"onAddClick()\"\n  />\n  {#each poll.options as option, i}\n    <label id=\"poll-option-label-{realm}-{i}\"\n           class=\"sr-only\"\n           for=\"poll-option-{realm}-{i}\">\n      Choice {i + 1}\n    </label>\n  {/each}\n</section>\n<style>\n  .compose-poll {\n    margin: 10px 0 10px 5px;\n    display: grid;\n    grid-template-columns: minmax(0, max-content) max-content;\n    grid-row-gap: 10px;\n    align-items: center;\n  }\n\n  :global(.poll-expiry-select) {\n    margin-left: 10px;\n  }\n\n  .multiple-choice-label {\n    margin-left: 5px;\n  }\n\n  @media (max-width: 767px) {\n    :global(.poll-expiry-select) {\n      display: block;\n      margin-left: 0;\n      margin-top: 10px;\n    }\n    :global(.add-poll-choice-button) {\n      align-self: flex-start;\n    }\n  }\n</style>\n<script>\n  import IconButton from '../IconButton.html'\n  import Select from '../Select.html'\n  import { store } from '../../_store/store.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n  import { POLL_EXPIRY_DEFAULT, POLL_EXPIRY_OPTIONS } from '../../_static/polls.js'\n  import { formatIntl } from '../../_utils/formatIntl.js'\n\n  function flushPollOptionsToDom (poll, realm) {\n    for (let i = 0; i < poll.options.length; i++) {\n      const element = document.getElementById(`poll-option-${realm}-${i}`)\n      element.value = poll.options[i]\n    }\n  }\n\n  export default {\n    oncreate () {\n      const { realm } = this.get()\n      const poll = this.store.getComposeData(realm, 'poll')\n      flushPollOptionsToDom(poll, realm)\n      document.getElementById(`poll-option-multiple-${realm}`).checked = !!poll.multiple\n      this.set({ pollExpiryDefaultValue: poll.expiry || POLL_EXPIRY_DEFAULT })\n    },\n    data: () => ({\n      pollExpiryOptions: POLL_EXPIRY_OPTIONS,\n      pollExpiryDefaultValue: POLL_EXPIRY_DEFAULT\n    }),\n    store: () => store,\n    helpers: {\n      createLabel (i) {\n        return formatIntl([\"Choice \",[\"index\"]], { index: i + 1 })\n      },\n      createRemoveLabel (i) {\n        return formatIntl([\"Remove choice \",[\"index\"]], { index: i + 1 })\n      }\n    },\n    methods: {\n      onChange (i) {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          const element = document.getElementById(`poll-option-${realm}-${i}`)\n          const poll = this.store.getComposeData(realm, 'poll')\n          poll.options[i] = element.value\n          this.store.setComposeData(realm, { poll })\n          this.store.save()\n        })\n      },\n      onMultipleChange () {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          const element = document.getElementById(`poll-option-multiple-${realm}`)\n          const poll = this.store.getComposeData(realm, 'poll')\n          poll.multiple = !!element.checked\n          this.store.setComposeData(realm, { poll })\n          this.store.save()\n        })\n      },\n      onDeleteClick (i) {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          const poll = this.store.getComposeData(realm, 'poll')\n          poll.options.splice(i, 1)\n          this.store.setComposeData(realm, { poll })\n          this.store.save()\n          flushPollOptionsToDom(poll, realm)\n        })\n      },\n      onAddClick () {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          const poll = this.store.getComposeData(realm, 'poll')\n          if (!poll.options.length !== 4) {\n            poll.options.push('')\n          }\n          this.store.setComposeData(realm, { poll })\n          this.store.save()\n        })\n      },\n      onExpiryChange (e) {\n        scheduleIdleTask(() => {\n          const { realm } = this.get()\n          const { value } = e.target\n          const poll = this.store.getComposeData(realm, 'poll')\n          poll.expiry = parseInt(value, 10)\n          this.store.setComposeData(realm, { poll })\n          this.store.save()\n        })\n      }\n    },\n    components: {\n      IconButton,\n      Select\n    }\n  }\n</script>\n","{#if media.length}\n  <div class=\"compose-media-sensitive\">\n    <label>\n      <input type=\"checkbox\" bind:checked=\"rawChecked\" {disabled} />\n      <span class=\"{disabled ? 'compose-sensitive-span-disabled' : ''}\">\n        Mark media as sensitive\n      </span>\n    </label>\n  </div>\n{/if}\n<style>\n  .compose-media-sensitive {\n    grid-area: sensitive;\n    margin-top: 10px;\n  }\n  label {\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  span {\n    margin-left: 5px;\n  }\n  .compose-sensitive-span-disabled {\n    color: var(--deemphasized-text-color);\n  }\n\n  @media (max-width: 767px) {\n    .compose-media-sensitive {\n      margin-top: 0;\n    }\n  }\n\n  @media (max-width: 320px) {\n    span {\n      font-size: 0.9em;\n    }\n  }\n\n</style>\n<script>\n  import { observe } from 'svelte-extras'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n\n  export default {\n    oncreate () {\n      this.setupSyncToStore()\n      this.setupSyncFromStore()\n    },\n    data: () => ({\n      rawChecked: false\n    }),\n    computed: {\n      disabled: ({ contentWarning, contentWarningShown }) => contentWarning && contentWarningShown\n    },\n    methods: {\n      observe,\n      setupSyncToStore () {\n        this.observe('rawChecked', () => {\n          scheduleIdleTask(() => {\n            const { realm } = this.get()\n            const { rawChecked } = this.get()\n            const sensitive = this.store.getComposeData(realm, 'sensitive')\n            if (sensitive !== rawChecked) {\n              this.store.setComposeData(realm, { sensitive: rawChecked })\n              this.store.save()\n            }\n          })\n        }, { init: false })\n      },\n      setupSyncFromStore () {\n        this.observe('sensitive', sensitive => {\n          this.set({ rawChecked: sensitive })\n        })\n      }\n    }\n  }\n</script>\n","import { slide as svelteSlide } from 'svelte-transitions'\nimport { store } from '../_store/store.js'\nimport { noop } from '../_utils/lodash-lite.js'\n\n// same as svelte-transitions, but respecting reduceMotion\nexport function slide (node, ref) {\n  const { reduceMotion } = store.get()\n  if (reduceMotion) {\n    return {\n      delay: 0,\n      duration: 1, // setting to 0 causes some kind of built-in duration\n      easing: _ => _,\n      css: noop\n    }\n  }\n  return svelteSlide(node, ref)\n}\n","import { store } from '../_store/store.js'\nimport { toast } from '../_components/toast/toast.js'\nimport { postStatus as postStatusToServer } from '../_api/statuses.js'\nimport { addStatusOrNotification } from './addStatusOrNotification.js'\nimport { database } from '../_database/database.js'\nimport { emit } from '../_utils/eventBus.js'\nimport { putMediaMetadata } from '../_api/media.js'\nimport { uniqBy } from '../_thirdparty/lodash/objects.js'\nimport { scheduleIdleTask } from '../_utils/scheduleIdleTask.js'\nimport { formatIntl } from '../_utils/formatIntl.js'\n\nexport async function insertHandleForReply (statusId) {\n  const { currentInstance } = store.get()\n  const status = await database.getStatus(currentInstance, statusId)\n  const { currentVerifyCredentials } = store.get()\n  const originalStatus = status.reblog || status\n  let accounts = [originalStatus.account].concat(originalStatus.mentions || [])\n    .filter(account => account.id !== currentVerifyCredentials.id)\n  // Pleroma includes account in mentions as well, so make uniq https://github.com/nolanlawson/pinafore/issues/1591\n  accounts = uniqBy(accounts, _ => _.id)\n  if (!store.getComposeData(statusId, 'text') && accounts.length) {\n    store.setComposeData(statusId, {\n      text: accounts.map(account => `@${account.acct} `).join('')\n    })\n  }\n}\n\nexport async function postStatus (realm, text, inReplyToId, mediaIds,\n  sensitive, spoilerText, visibility,\n  mediaDescriptions, inReplyToUuid, poll, mediaFocalPoints) {\n  const { currentInstance, accessToken, online } = store.get()\n\n  if (!online) {\n    /* no await */ toast.say(\"You cannot post while offline\")\n    return\n  }\n\n  text = text || ''\n\n  const mediaMetadata = (mediaIds || []).map((mediaId, idx) => {\n    return {\n      description: mediaDescriptions && mediaDescriptions[idx],\n      focalPoint: mediaFocalPoints && mediaFocalPoints[idx]\n    }\n  })\n\n  store.set({ postingStatus: true })\n  try {\n    await Promise.all(mediaMetadata.map(async ({ description, focalPoint }, i) => {\n      description = description || ''\n      focalPoint = focalPoint || [0, 0]\n      focalPoint[0] = focalPoint[0] || 0\n      focalPoint[1] = focalPoint[1] || 0\n      if (description || focalPoint[0] || focalPoint[1]) {\n        return putMediaMetadata(currentInstance, accessToken, mediaIds[i], description, focalPoint)\n      }\n    }))\n    const status = await postStatusToServer(currentInstance, accessToken, text,\n      inReplyToId, mediaIds, sensitive, spoilerText, visibility, poll, mediaFocalPoints)\n    addStatusOrNotification(currentInstance, 'home', status)\n    store.clearComposeData(realm)\n    emit('postedStatus', realm, inReplyToUuid)\n    scheduleIdleTask(() => (mediaIds || []).forEach(mediaId => database.deleteCachedMediaFile(mediaId))) // clean up media cache\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(formatIntl([\"Unable to post toot: \",[\"error\"]], { error: (e.message || '') }))\n  } finally {\n    store.set({ postingStatus: false })\n  }\n}\n\nexport function setReplySpoiler (realm, spoiler) {\n  const contentWarning = store.getComposeData(realm, 'contentWarning')\n  const contentWarningShown = store.getComposeData(realm, 'contentWarningShown')\n  if (typeof contentWarningShown !== 'undefined' || contentWarning) {\n    return // user has already interacted with the CW\n  }\n  store.setComposeData(realm, {\n    contentWarning: spoiler,\n    contentWarningShown: true\n  })\n}\n\nconst PRIVACY_LEVEL = {\n  direct: 1,\n  private: 2,\n  unlisted: 3,\n  public: 4\n}\n\nexport function setReplyVisibility (realm, replyVisibility) {\n  // return the most private between the user's preferred default privacy\n  // and the privacy of the status they're replying to\n  const postPrivacy = store.getComposeData(realm, 'postPrivacy')\n  if (typeof postPrivacy !== 'undefined') {\n    return // user has already set the postPrivacy\n  }\n  const { currentVerifyCredentials } = store.get()\n  const defaultVisibility = currentVerifyCredentials.source.privacy\n  const visibility = PRIVACY_LEVEL[replyVisibility] < PRIVACY_LEVEL[defaultVisibility]\n    ? replyVisibility\n    : defaultVisibility\n  store.setComposeData(realm, { postPrivacy: visibility })\n}\n","{#if realm === 'home'}\n  <h2 class=\"sr-only\">Compose toot</h2>\n{/if}\n<ComposeFileDrop {realm} >\n  <div class=\"{computedClassName} {hideAndFadeIn}\">\n    <ComposeAuthor {realm} {dialogId} />\n    {#if contentWarningShown}\n      <div class=\"compose-content-warning-wrapper\"\n           transition:slide=\"{duration: 333}\">\n        <ComposeContentWarning {realm} {contentWarning} />\n      </div>\n    {/if}\n    <ComposeInput {realm} {text} {autoFocus} on:postAction=\"doPostStatus()\" />\n    <ComposeLengthGauge {length} {overLimit} />\n    <ComposeAutosuggest {realm} {text} {dialogId} />\n    {#if poll && poll.options && poll.options.length}\n      <div class=\"compose-poll-wrapper\"\n           transition:slide=\"{duration: 333}\">\n        <ComposePoll {realm} {poll} />\n      </div>\n    {/if}\n    <ComposeToolbar {realm} {postPrivacy} {media} {contentWarningShown} {text} {poll} />\n    <ComposeLengthIndicator {length} {overLimit} />\n    <ComposeMedia {realm} {media} />\n    <ComposeMediaSensitive {realm} {media} {sensitive} {contentWarning} {contentWarningShown} />\n  </div>\n</ComposeFileDrop>\n<ComposeStickyButton {showSticky}\n                     {overLimit}\n                     {hideAndFadeIn}\n                     on:postAction=\"doPostStatus()\" />\n{#if !hideBottomBorder}\n  <div class=\"compose-box-border-bottom {hideAndFadeIn}\"></div>\n{/if}\n\n<style>\n  .compose-box {\n    border-radius: 4px;\n    padding: 20px 20px 0 20px;\n    display: grid;\n    align-items: flex-start;\n    grid-template-areas:\n      \"avatar name        handle      handle\"\n      \"avatar cw          cw          cw\"\n      \"avatar input       input       input\"\n      \"avatar gauge       gauge       gauge\"\n      \"avatar autosuggest autosuggest autosuggest\"\n      \"avatar poll        poll        poll\"\n      \"avatar toolbar     toolbar     length\"\n      \"avatar media       media       media\"\n      \"avatar sensitive   sensitive   sensitive\";\n    grid-template-columns: min-content minmax(0, max-content) 1fr 1fr;\n    position: relative;\n  }\n\n  .compose-box.direct-reply {\n    background-color: var(--status-direct-background);\n  }\n\n  :global(.compose-box-fade-in) {\n    transition: opacity 0.2s linear; /* main page reveal */\n  }\n\n  .compose-box-border-bottom {\n    height: 1px;\n    background: var(--main-border);\n    width: 100%;\n  }\n\n  .compose-content-warning-wrapper {\n    grid-area: cw;\n  }\n\n  .compose-poll-wrapper {\n    grid-area: poll;\n  }\n\n  @media (max-width: 767px) {\n    .compose-box {\n      padding: 10px 10px 0 10px;\n    }\n\n    .compose-box-realm-dialog {\n      overflow-x: hidden;\n    }\n  }\n\n  @media (max-width: 240px) {\n    .compose-box {\n      padding: 10px 5px 0 5px;\n    }\n  }\n</style>\n<script>\n  import ComposeToolbar from './ComposeToolbar.html'\n  import ComposeLengthGauge from './ComposeLengthGauge.html'\n  import ComposeLengthIndicator from './ComposeLengthIndicator.html'\n  import ComposeAuthor from './ComposeAuthor.html'\n  import ComposeInput from './ComposeInput.html'\n  import ComposeStickyButton from './ComposeStickyButton.html'\n  import ComposeMedia from './ComposeMedia.html'\n  import ComposeContentWarning from './ComposeContentWarning.html'\n  import ComposeFileDrop from './ComposeFileDrop.html'\n  import ComposeAutosuggest from './ComposeAutosuggest.html'\n  import ComposePoll from './ComposePoll.html'\n  import ComposeMediaSensitive from './ComposeMediaSensitive.html'\n  import { measureText } from '../../_utils/measureText.js'\n  import { POST_PRIVACY_OPTIONS } from '../../_static/statuses.js'\n  import { store } from '../../_store/store.js'\n  import { slide } from '../../_transitions/slide.js'\n  import { postStatus, insertHandleForReply, setReplySpoiler, setReplyVisibility } from '../../_actions/compose.js'\n  import { classname } from '../../_utils/classname.js'\n  import { POLL_EXPIRY_DEFAULT } from '../../_static/polls.js'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask.js'\n\n  export default {\n    oncreate () {\n      const { realm, replySpoiler, replyVisibility } = this.get()\n      if (realm !== 'home' && realm !== 'dialog') {\n        // if this is a reply, populate the handle immediately\n        /* no await */ insertHandleForReply(realm)\n      }\n\n      if (replySpoiler) {\n        // default spoiler is same as the replied-to status\n        setReplySpoiler(realm, replySpoiler)\n      }\n\n      if (replyVisibility) {\n        // make sure the visibility is consistent with the replied-to status\n        setReplyVisibility(realm, replyVisibility)\n      }\n    },\n    components: {\n      ComposeAuthor,\n      ComposeToolbar,\n      ComposeLengthGauge,\n      ComposeLengthIndicator,\n      ComposeInput,\n      ComposeStickyButton,\n      ComposeMedia,\n      ComposeContentWarning,\n      ComposeFileDrop,\n      ComposeAutosuggest,\n      ComposePoll,\n      ComposeMediaSensitive\n    },\n    data: () => ({\n      size: undefined,\n      isReply: false,\n      autoFocus: false,\n      hideBottomBorder: false,\n      hidden: false,\n      dialogId: undefined,\n      aboutToPostStatus: false\n    }),\n    store: () => store,\n    computed: {\n      computedClassName: ({ overLimit, realm, size, postPrivacyKey, isReply }) => (classname(\n        'compose-box',\n        `compose-box-realm-${realm}`,\n        overLimit && 'over-char-limit',\n        isReply && postPrivacyKey === 'direct' && 'direct-reply'\n      )),\n      hideAndFadeIn: ({ hidden }) => (classname(\n        'compose-box-fade-in',\n        hidden && 'hidden'\n      )),\n      showSticky: ({ realm }) => realm === 'home',\n      composeData: ({ $currentComposeData, realm }) => $currentComposeData[realm] || {},\n      text: ({ composeData }) => composeData.text || '',\n      media: ({ composeData }) => composeData.media || [],\n      poll: ({ composeData }) => composeData.poll,\n      inReplyToId: ({ composeData }) => composeData.inReplyToId,\n      postPrivacy: ({ postPrivacyKey }) => POST_PRIVACY_OPTIONS.find(_ => _.key === postPrivacyKey),\n      defaultPostPrivacyKey: ({ $currentVerifyCredentials }) => (\n        ($currentVerifyCredentials && $currentVerifyCredentials.source.privacy) || 'public'\n      ),\n      postPrivacyKey: ({ composeData, defaultPostPrivacyKey }) => composeData.postPrivacy || defaultPostPrivacyKey,\n      textLength: ({ text }) => measureText(text),\n      contentWarningLength: ({ contentWarning }) => measureText(contentWarning),\n      length: ({ textLength, contentWarningLength, contentWarningShown }) => (\n        textLength + (contentWarningShown ? contentWarningLength : 0)\n      ),\n      overLimit: ({ length, $maxStatusChars }) => length > $maxStatusChars,\n      contentWarningShown: ({ composeData }) => composeData.contentWarningShown,\n      contentWarning: ({ composeData }) => composeData.contentWarning || '',\n      sensitive: ({ composeData }) => !!composeData.sensitive\n    },\n    transitions: {\n      slide\n    },\n    methods: {\n      async doPostStatus () {\n        const { aboutToPostStatus } = this.get()\n        const { postingStatus } = this.store.get()\n        if (aboutToPostStatus || postingStatus) { // do nothing if the user rapidly taps the Ctrl-Enter key\n          console.log('ignored post command', { aboutToPostStatus, postingStatus })\n          return\n        }\n        // The reason we add a scheduleIdleTask delay here is because we also use scheduleIdleTask\n        // in ComposeInput.html to debounce the input events. If the user is very fast at typing\n        // at their keyboard and quickly presses Ctrl+Enter or the \"Toot\" button then there could\n        // be a race condition where not all of their status is posted.\n        this.set({ aboutToPostStatus: true })\n        scheduleIdleTask(() => {\n          this.set({ aboutToPostStatus: false })\n          this.doPostStatusAfterDelay()\n        })\n      },\n      doPostStatusAfterDelay () {\n        const {\n          text,\n          media,\n          postPrivacyKey,\n          contentWarning,\n          realm,\n          overLimit,\n          inReplyToUuid, // typical replies, using Semaphore-specific uuid\n          inReplyToId, // delete-and-redraft replies, using standard id\n          poll,\n          sensitive\n        } = this.get()\n        const mediaIds = media.map(_ => _.data.id)\n        const mediaDescriptions = media.map(_ => _.description)\n        const mediaFocalPoints = media.map(_ => [_.focusX, _.focusY])\n        const inReplyTo = inReplyToId || ((realm === 'home' || realm === 'dialog') ? null : realm)\n\n        if (overLimit || (!text && !media.length)) {\n          return // do nothing if invalid\n        }\n\n        const hasPoll = poll && poll.options && poll.options.length\n        if (hasPoll) {\n          // validate poll\n          if (poll.options.length < 2 || !poll.options.every(Boolean)) {\n            return\n          }\n        }\n\n        // convert internal poll format to the format Mastodon's REST API uses\n        const pollToPost = hasPoll && {\n          expires_in: (poll.expiry || POLL_EXPIRY_DEFAULT).toString(),\n          multiple: !!poll.multiple,\n          options: poll.options\n        }\n\n        /* no await */ postStatus(realm, text, inReplyTo, mediaIds,\n          sensitive, contentWarning, postPrivacyKey,\n          mediaDescriptions, inReplyToUuid, pollToPost,\n          mediaFocalPoints)\n      }\n    }\n  }\n</script>\n","import { auth, basename } from './utils.js'\nimport { DEFAULT_TIMEOUT, get, post, put, WRITE_TIMEOUT } from '../_utils/ajax.js'\n\n// post is create, put is edit\nasync function postOrPutStatus (url, accessToken, method, text, inReplyToId, mediaIds,\n  sensitive, spoilerText, visibility, poll) {\n  const body = {\n    status: text,\n    media_ids: mediaIds,\n    sensitive,\n    spoiler_text: spoilerText,\n    poll,\n    ...(method === 'post' && {\n      // you can't change these properties when editing\n      in_reply_to_id: inReplyToId,\n      visibility\n    })\n  }\n\n  for (const key of Object.keys(body)) {\n    const value = body[key]\n    // remove any unnecessary fields, except 'status' which must at least be an empty string\n    if (key !== 'status' && (!value || (Array.isArray(value) && !value.length))) {\n      delete body[key]\n    }\n  }\n\n  const func = method === 'post' ? post : put\n\n  return func(url, body, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function postStatus (instanceName, accessToken, text, inReplyToId, mediaIds,\n  sensitive, spoilerText, visibility, poll) {\n  const url = `${basename(instanceName)}/api/v1/statuses`\n  return postOrPutStatus(url, accessToken, 'post', text, inReplyToId, mediaIds,\n    sensitive, spoilerText, visibility, poll)\n}\n\nexport async function putStatus (instanceName, accessToken, id, text, inReplyToId, mediaIds,\n  sensitive, spoilerText, visibility, poll) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${id}`\n  return postOrPutStatus(url, accessToken, 'put', text, inReplyToId, mediaIds,\n    sensitive, spoilerText, visibility, poll)\n}\n\nexport async function getStatusContext (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/context`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport async function getStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n","// Modified from https://github.com/jackmoore/autosize/blob/113f1b3/src/autosize.js\n// The only change is to remove IE-specific hacks,\n// remove parent overflow checks, make page resizes more performant,\n// add deferredUpdate, and add perf marks.\n\nimport { mark, stop } from '../../_utils/marks.js'\nimport { debounce } from '../../_thirdparty/lodash/timers.js'\nimport { getScrollContainer } from '../../_utils/scrollContainer.js'\nimport { throttleTimer } from '../../_utils/throttleTimer.js'\n\nconst doUpdate = process.browser && throttleTimer(requestAnimationFrame)\n\nconst map = new Map()\n\nfunction assign (ta) {\n  if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) {\n    return\n  }\n\n  // TODO: hack - grab our scroll container so we can maintain the scrollTop\n  const container = getScrollContainer()\n  let heightOffset = null\n\n  function init () {\n    const style = window.getComputedStyle(ta, null)\n\n    if (style.boxSizing === 'content-box') {\n      heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom))\n    } else {\n      heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth)\n    }\n\n    update()\n  }\n\n  function resize () {\n    mark('autosize:resize()')\n    _resize()\n    stop('autosize:resize()')\n  }\n\n  function _resize () {\n    const originalHeight = ta.style.height\n    const scrollTop = container.scrollTop\n\n    ta.style.height = '' // this may change the scrollTop in Firefox\n\n    const endHeight = ta.scrollHeight + heightOffset\n\n    if (ta.scrollHeight === 0) {\n      // If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n      ta.style.height = originalHeight\n    } else {\n      ta.style.height = `${endHeight}px`\n      container.scrollTop = scrollTop // Firefox jiggles if we don't reset the scrollTop of the container\n    }\n  }\n\n  const deferredUpdate = () => doUpdate(update)\n\n  function update () {\n    mark('autosize:update()')\n    _update()\n    stop('autosize:update()')\n  }\n\n  function _update () {\n    resize()\n  }\n\n  const pageResize = debounce(() => requestAnimationFrame(update), 1000)\n\n  const destroy = () => {\n    window.removeEventListener('resize', pageResize, false)\n    ta.removeEventListener('input', deferredUpdate, false)\n\n    map.delete(ta)\n  }\n\n  window.addEventListener('resize', pageResize, false)\n  ta.addEventListener('input', deferredUpdate, false)\n\n  map.set(ta, {\n    destroy,\n    update\n  })\n\n  init()\n}\n\nfunction destroy (ta) {\n  const methods = map.get(ta)\n  if (methods) {\n    methods.destroy()\n  }\n}\n\nfunction update (ta) {\n  const methods = map.get(ta)\n  if (methods) {\n    methods.update()\n  }\n}\n\nconst autosize = (el, options) => {\n  if (el) {\n    Array.prototype.forEach.call(el.length ? el : [el], x => assign(x, options))\n  }\n  return el\n}\nautosize.destroy = el => {\n  if (el) {\n    Array.prototype.forEach.call(el.length ? el : [el], destroy)\n  }\n  return el\n}\nautosize.update = el => {\n  if (el) {\n    Array.prototype.forEach.call(el.length ? el : [el], update)\n  }\n  return el\n}\n\nexport { autosize }\n","import { thunk } from './thunk.js'\n\nexport const urlRegex = thunk(() => {\n  // this is provided at build time to avoid having a lot of runtime code just to build\n  // a static regex\n  return process.env.URL_REGEX\n})\n","/* eslint-disable */\nimport { thunk } from './thunk.js'\n\nexport const handleRegex = thunk(() => /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/ig)\n/* eslint-enable */\n","// via https://github.com/tootsuite/mastodon/blob/5d5c0f4/app/javascript/mastodon/features/compose/util/counter.js\n\nimport { urlRegex } from './urlRegex.js'\nimport { handleRegex } from './handleRegex.js'\nimport { mark, stop } from './marks.js'\nimport { length } from 'stringz'\n\nconst urlPlaceholder = 'xxxxxxxxxxxxxxxxxxxxxxx'\n\nexport function measureText (inputText) {\n  if (!inputText) {\n    return 0\n  }\n  mark('measureText()')\n  const normalizedText = inputText\n    .replace(urlRegex(), urlPlaceholder)\n    .replace(handleRegex(), '$1@$3')\n  const len = length(normalizedText)\n  stop('measureText()')\n  return len\n}\n","// modeled after https://github.com/andrewiggins/afterframe\n// see also https://github.com/WICG/requestPostAnimationFrame\nconst channel = process.browser && new MessageChannel()\nconst callbacks = []\n\nif (process.browser) {\n  channel.port1.onmessage = onMessage\n}\n\nfunction runCallback (callback) {\n  try {\n    callback()\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nfunction onMessage () {\n  for (const callback of callbacks) {\n    runCallback(callback)\n  }\n  callbacks.length = 0\n}\n\nfunction postMessage () {\n  channel.port2.postMessage(undefined)\n}\n\nexport const requestPostAnimationFrame = callback => {\n  if (callbacks.push(callback) === 1) {\n    requestAnimationFrame(postMessage)\n  }\n}\n","// Sometimes we want to queue multiple requestAnimationFrames but only run the last one.\n// It's tedious to do this using cancelAnimationFrame, so this is a utility to throttle\n// a timer such that it only runs the last callback when it fires.\n\nexport const throttleTimer = timer => {\n  let queuedCallback\n\n  const flush = () => {\n    const callback = queuedCallback\n    queuedCallback = null\n    callback()\n  }\n\n  return callback => {\n    if (!queuedCallback) {\n      timer(flush)\n    }\n    queuedCallback = callback\n  }\n}\n"],"names":["updateDisplayedLength","requestAnimationFrame","observe","lengthAsFraction","this","get","set","lengthAsFractionDeferred","s","shouldAnimate","init","style","computedClass","computedStyle","length","max","int","Math","round","min","overLimit","$reduceMotion","lengthToDisplay","lengthToDisplayDeferred","lengthVerbosity","async","realm","currentInstance","store","showEmojiDialog","Promise","all","then","mod","default","onMediaClick","refs","input","click","e","files","target","file","onContentWarningClick","shown","contentWarning","newShown","contentWarningShown","sensitive","toggleContentWarningShown","onPollClick","poll","options","disablePoll","enablePoll","mediaAccept","onEmojiClick","$uploadingMedia","media","postPrivacyLabel","postPrivacy","icon","onPostPrivacyClick","onFileChange","event","formatIntl","label","$maxStatusChars","onClick","dialogId","href","preventDefault","stopPropagation","setTimeout","verifyCredentials","acct","avatarSize","loaded","$currentVerifyCredentials","display_name","avatar","avatar_static","id","$isVeryTinyMobileSize","emojiMapper","emoji","unicode","shortcodes","hashtagMapper","hashtag","name","accountMapper","account","insertTextAtPosition","text","startIndex","endIndex","oldText","newText","substring","autosuggestSearchResults","clickSelectedItem","resultMapper","composeSelectionStart","autosuggestSearchText","autosuggestSelected","result","selectAutosuggestItem","item","currentComposeRealm","insertUsername","insertEmojiAtPosition","insertHashtag","isWebKit","webkitIndexedDB","updateComposeTextInStore","throttleTimer","scheduleIdleTask","setupSyncFromStore","textarea","firstTime","rawText","newSelectionStart","selectionStart","selectionEnd","autosize","autoFocus","setAttribute","focus","preventScroll","setupSyncToStore","setComposeData","save","setupAutosize","requestPostAnimationFrame","teardownAutosize","onBlur","setForCurrentAutosuggest","composeFocused","onFocus","onSelectionChange","onKeydown","keyCode","ctrlPressed","getModifierState","clickSelectedAutosuggestion","fire","incrementAutosuggestSelected","clearAutosuggestions","autosuggestShown","autosuggestType","autosuggestSelecting","clickSelectedAutosuggestionUsername","clickSelectedAutosuggestionHashtag","clickSelectedAutosuggestionEmoji","clickAutosuggestedItem","increment","setupResize","on","setCursorIfNecessary","value","autosuggestShownForThisInput","activeDescendant","$autosuggestData_composeFocused","$currentInstance","$autosuggestShown","$autosuggestData_autosuggestSelected","undefined","$postingStatus","sticky","disabled","onClickButton","showDialog","importShowComposeDialog","setupIntersectionObservers","showSticky","sentinel","__stickyObserver","IntersectionObserver","entries","onObserve","timelineInitialized","__oneShotObserver","disconnect","isIntersecting","teardownIntersectionObservers","$timelineInitialized","hideAndFadeIn","classname","updateMediaInStore","resizeTextarea","index","focusX","focusY","description","onDeleteMedia","type","onEdit","objectPosition","previewSrc","uuid","shortName","mediaItem","data","preview_url","coordsToPercent","updateContentWarningInStore","onFileDrop","bind","fileDrop","addEventListener","removeEventListener","onFileDRop","items","$omitEmojiInDisplayNames","map","i","selectedIndex","searchResults","selected","concat","join","displayName","username","emojis","removeEmoji","createAutosuggestAccessibleLabel","_","url","ariaLabels","once","eventName","callback","listener","eventValue","cancel","_promiseChain","resolve","shouldBeShown","race","top","left","$autosuggestData_composeSelectionStart","$autosuggestData_autosuggestSearchResults","$autosuggestData_autosuggestType","updatePosition","setup","_element","document","getElementById","createElement","querySelector","body","appendChild","calculateLeftAndTop","_autosuggest","onResize","doResize","anchor","bottom","getBoundingClientRect","scrollTop","setupDone","destroy","remove","POLL_EXPIRY_OPTIONS","POLL_EXPIRY_DEFAULT","flushPollOptionsToDom","onChange","element","getComposeData","onMultipleChange","multiple","checked","onDeleteClick","splice","onAddClick","push","onExpiryChange","expiry","parseInt","pollExpiryDefaultValue","createLabel","pollExpiryOptions","rawChecked","slide","node","ref","reduceMotion","delay","duration","easing","css","PRIVACY_LEVEL","direct","private","unlisted","public","aboutToPostStatus","postingStatus","doPostStatusAfterDelay","postPrivacyKey","inReplyToUuid","inReplyToId","mediaIds","mediaDescriptions","mediaFocalPoints","inReplyTo","hasPoll","every","Boolean","spoilerText","visibility","accessToken","online","toast","mediaMetadata","mediaId","idx","focalPoint","status","addStatusOrNotification","forEach","database","console","error","message","postStatus","expires_in","toString","replySpoiler","replyVisibility","statusId","currentVerifyCredentials","originalStatus","reblog","accounts","mentions","filter","insertHandleForReply","spoiler","setReplySpoiler","defaultVisibility","source","privacy","setReplyVisibility","size","isReply","hideBottomBorder","hidden","doPostStatus","computedClassName","$currentComposeData","composeData","measureText","textLength","contentWarningLength","defaultPostPrivacyKey","key","postOrPutStatus","method","media_ids","spoiler_text","in_reply_to_id","Object","keys","Array","isArray","timeout","instanceName","getStatusContext","getStatus","doUpdate","Map","assign","ta","nodeName","has","container","heightOffset","resize","originalHeight","height","endHeight","scrollHeight","_resize","deferredUpdate","update","pageResize","window","delete","getComputedStyle","boxSizing","parseFloat","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","methods","el","prototype","call","x","urlRegex","thunk","handleRegex","inputText","normalizedText","replace","len","channel","MessageChannel","callbacks","runCallback","postMessage","port2","port1","onmessage","timer","queuedCallback","flush"],"sourceRoot":""}